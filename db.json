{
  "openapi": "3.0.1",
  "info": {
    "title": "Site Stacker API",
    "description": "Visualize and try the Site Stacker API.\n\nAuthentication: The requests here are already authenticated if you're logged in into Site Stacker. For authentication see [http://docs.sitestacker.com/articles/api-authentication](http://docs.sitestacker.com/articles/api-authentication).\n\n**CAUTION:** Any changes you make will be permanent.",
    "version": "1-alpha"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "Activity",
      "description": "Activities related to a CRM record (e.g. log a call, new task)."
    },
    {
      "name": "Campaign",
      "description": "Contribution campaigns (e.g. missionaries, projects, etc.)."
    },
    {
      "name": "ContributionBatch",
      "description": "A contribution batch represents a gift, split between one or multiple campaigns (contributions)."
    },
    {
      "name": "HistoricGift",
      "description": "Online and offline gifts used for generating reports and statements."
    },
    {
      "name": "Item",
      "description": "An item represents a content item of a certain type, with translations and versions with dynamic fields."
    },
    {
      "name": "Newsletters",
      "description": "Newsletter lists and subscribers."
    },
    {
      "name": "PaymentMethod",
      "description": "A payment method is associated with a contribution batch."
    },
    {
      "name": "Person",
      "description": "A person represents a CRM record."
    },
    {
      "name": "PersonAddress",
      "description": "Addresses are associated to CRM records."
    },
    {
      "name": "PersonEmail",
      "description": "A CRM record can have multiple emails."
    },
    {
      "name": "PersonFile",
      "description": "A CRM record can have multiple files associated."
    },
    {
      "name": "PersonPhone",
      "description": "A CRM record can have multiple phones."
    },
    {
      "name": "PersonRelation",
      "description": "Relation between two CRM records."
    },
    {
      "name": "PersonType",
      "description": "A CRM record can have multiple person (record) types."
    },
    {
      "name": "PersonEntity",
      "description": "A CRM record can have multiple entities associated."
    },
    {
      "name": "PersonEntityData",
      "description": "An entity represents custom data associated with a CRM record. Entities and their structure are configured in `CRM > Configuration > Entities Tab`.\n These endpoints expose the entity data for a CRM record. To use them, you first need to have the entities configured in admin."
    },
    {
      "name": "Site",
      "description": "Manage sites."
    },
    {
      "name": "Tag",
      "description": "Manage tags."
    },
    {
      "name": "TagCategory",
      "description": "Manage tag categories."
    }
  ],
  "components": {
    "schemas": {
      "Activity": {
        "required": [
          "type",
          "subject"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "external_id": {
            "default": "",
            "maxLength": 50,
            "type": "string"
          },
          "is_system": {
            "default": false,
            "type": "boolean"
          },
          "subject": {
            "nullable": true,
            "maxLength": 255,
            "type": "string"
          },
          "body": {
            "nullable": true,
            "type": "string"
          },
          "notes": {
            "nullable": true,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "alias": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "pattern": "/^(?![0-9]*$)[a-zA-Z0-9]+$/i",
                "unique": true,
                "description": "Alias has to start with the first letter uppercase and singular (e.g. Article)."
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "is_editable": {
                "default": true,
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              }
            },
            "description": "The activity type"
          },
          "person": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            },
            "description": "The person who created this activity (optional)"
          },
          "people": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "nullable": true,
                  "maxLength": 30,
                  "type": "string",
                  "example": "Mr."
                },
                "firstname": {
                  "default": "",
                  "maxLength": 100,
                  "type": "string"
                },
                "middlename": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "lastname": {
                  "default": "",
                  "maxLength": 50,
                  "type": "string"
                },
                "suffix": {
                  "nullable": true,
                  "maxLength": 10,
                  "type": "string",
                  "example": "Jr."
                },
                "gender": {
                  "nullable": true,
                  "maxLength": 10,
                  "type": "string",
                  "enum": [
                    "m",
                    "f"
                  ]
                },
                "birthday": {
                  "nullable": true,
                  "type": "string",
                  "format": "date",
                  "description": "In the format `Y-m-d`"
                },
                "email": {
                  "default": "",
                  "maxLength": 250,
                  "type": "string",
                  "format": "email"
                },
                "created": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "description": "The date when this record was created.",
                  "readOnly": true
                },
                "modified": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "description": "The date when this record was last modified.",
                  "readOnly": true
                },
                "description": {
                  "default": "",
                  "maxLength": 500,
                  "type": "string"
                },
                "is_group": {
                  "default": false,
                  "type": "boolean"
                },
                "fullname": {
                  "default": "",
                  "maxLength": 100,
                  "type": "string",
                  "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                },
                "external_id": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string",
                  "description": "An external system id."
                },
                "virtuous_id": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string",
                  "description": "Virtuous contact individual id."
                }
              }
            },
            "description": "All the people involved in this activity (to whom this activity belongs to)"
          },
          "data": {
            "type": "object",
            "description": "Dynamic object containing custom fields configured for this activity type in CRM - Configuration. Null if custom data doesn't exist."
          }
        }
      },
      "Campaign": {
        "required": [
          "item",
          "site"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "goal_amount": {
            "nullable": true,
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "min_amount": {
            "nullable": true,
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "max_amount": {
            "nullable": true,
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "start": {
            "nullable": true,
            "type": "string",
            "format": "date"
          },
          "end": {
            "nullable": true,
            "type": "string",
            "format": "date"
          },
          "image": {
            "nullable": true,
            "maxLength": 500,
            "type": "string"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "show_extra_field": {
            "default": false,
            "type": "boolean"
          },
          "extra_field_label": {
            "nullable": true,
            "maxLength": 100,
            "type": "string"
          },
          "extra_field_is_required": {
            "default": false,
            "type": "boolean"
          },
          "allow_multiple_in_cart": {
            "default": false,
            "type": "boolean"
          },
          "is_disabled": {
            "default": false,
            "type": "boolean"
          },
          "accounting_code": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "inventory_status": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous project id."
          },
          "goals": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32"
                },
                "interval": {
                  "default": "0",
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "period": {
                  "default": "",
                  "maxLength": 20,
                  "type": "string",
                  "enum": [
                    "month",
                    "year",
                    "day",
                    "week"
                  ],
                  "example": "month"
                },
                "goal_amount": {
                  "nullable": true,
                  "maxLength": "10,2",
                  "type": "number",
                  "format": "double",
                  "example": "15.00"
                }
              }
            }
          },
          "fixed_amounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32"
                },
                "label": {
                  "default": "",
                  "maxLength": 100,
                  "type": "string"
                },
                "amount": {
                  "default": "0.00",
                  "maxLength": "10,2",
                  "type": "number",
                  "format": "double",
                  "example": "15.00"
                },
                "is_default": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          },
          "item": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "views": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "readOnly": true,
                "description": "The number of views for this item."
              },
              "publish_datetime": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date this item becomes available for publishing.",
                "readOnly": true
              },
              "unpublish_datetime": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date this item becomes unavailable for publishing.",
                "readOnly": true
              },
              "visibility": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only.",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "is_searchable": {
                "default": true,
                "type": "boolean",
                "description": "Controls if this item is searchable or not, on the site.",
                "readOnly": true
              },
              "alias": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "pattern": "/^[A-Za-z0-9_-]+$/",
                "description": "Created automatically from `name`, if not given.",
                "readOnly": true
              },
              "owner": {
                "type": "object",
                "description": "The person that is the owner of this item, if any.",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "nullable": true,
                    "maxLength": 30,
                    "type": "string",
                    "example": "Mr.",
                    "readOnly": true
                  },
                  "firstname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true
                  },
                  "middlename": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "lastname": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "suffix": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "example": "Jr.",
                    "readOnly": true
                  },
                  "gender": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "enum": [
                      "m",
                      "f"
                    ],
                    "readOnly": true
                  },
                  "birthday": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "description": "In the format `Y-m-d`",
                    "readOnly": true
                  },
                  "email": {
                    "type": "object",
                    "description": "Person default email",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string"
                      },
                      "default": {
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact email id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Work Email"
                      }
                    },
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "description": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string",
                    "readOnly": true
                  },
                  "is_group": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "fullname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual id.",
                    "readOnly": true
                  },
                  "household": {
                    "type": "object",
                    "description": "Person household",
                    "properties": {
                      "id": {
                        "readOnly": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "head_person_id": {
                        "nullable": true,
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "description": "The person id of the household head."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact id."
                      },
                      "modified": {
                        "description": "The date when this record was last modified."
                      }
                    },
                    "readOnly": true
                  },
                  "is_household_head": {
                    "type": "boolean",
                    "description": "If set to true, it will make this person the head of household.",
                    "readOnly": true
                  },
                  "address": {
                    "type": "object",
                    "description": "Person default address",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "address1": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "address2": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "city": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "zip": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "latitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "longitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact address id."
                      },
                      "state_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter state value",
                        "example": "FL"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter country value",
                        "example": "US"
                      },
                      "label": {
                        "type": "string",
                        "example": "Home Address"
                      }
                    },
                    "readOnly": true
                  },
                  "phone": {
                    "type": "object",
                    "description": "Person default phone",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "number": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "is_outside_us": {
                        "nullable": true,
                        "type": "boolean",
                        "default": false
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual contact method id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Cell"
                      }
                    },
                    "readOnly": true
                  },
                  "photo": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person default photo",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "path": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person user, if any",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "active": {
                        "default": true,
                        "type": "boolean"
                      },
                      "verified": {
                        "default": true,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "api_id": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true,
                        "description": "The API ID to use for API authentication."
                      }
                    }
                  }
                },
                "readOnly": true
              }
            },
            "description": "The content item associated with this campaign. There can't be multiple campaigns associated with the same item."
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "campaign_label": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "use_fixed_recurring_amounts": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "force_recurring": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "cart_expiration": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              }
            },
            "description": "The campaign category."
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "require_authentication": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              }
            }
          }
        }
      },
      "Contribution": {
        "required": [
          "amount"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double",
            "description": "Two decimal number without currency sign.",
            "example": 10
          },
          "is_recurring": {
            "default": false,
            "type": "boolean"
          },
          "is_online": {
            "default": false,
            "type": "boolean"
          },
          "is_anonymous": {
            "default": false,
            "type": "boolean",
            "description": "Mark this contribution as anonymous."
          },
          "paid_transaction_fee": {
            "default": false,
            "type": "boolean"
          },
          "error": {
            "nullable": true,
            "maxLength": 300,
            "type": "string"
          },
          "notes": {
            "nullable": true,
            "type": "string",
            "description": "Notes for the accounting department or campaign owner.",
            "example": "Have a great day!"
          },
          "success": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "description": "Determines if this was a successful contribution."
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "extra_data": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "description": "Using this field you can associate extra information with the contribution.",
            "example": "Missionary #123"
          },
          "source_codes": {
            "nullable": true,
            "maxLength": 100,
            "type": "string"
          },
          "pending": {
            "default": false,
            "type": "boolean"
          },
          "transaction_fee": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "campaign": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "goal_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "min_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "max_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "start": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "end": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "image": {
                "nullable": true,
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "show_extra_field": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "extra_field_label": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "extra_field_is_required": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "allow_multiple_in_cart": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_disabled": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "accounting_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "inventory_status": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous project id.",
                "readOnly": true
              },
              "item": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true
                  },
                  "views": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The number of views for this item."
                  },
                  "publish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes available for publishing.",
                    "readOnly": true
                  },
                  "unpublish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes unavailable for publishing.",
                    "readOnly": true
                  },
                  "visibility": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only.",
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id.",
                    "readOnly": true
                  },
                  "is_searchable": {
                    "default": true,
                    "type": "boolean",
                    "description": "Controls if this item is searchable or not, on the site.",
                    "readOnly": true
                  },
                  "alias": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "pattern": "/^[A-Za-z0-9_-]+$/",
                    "description": "Created automatically from `name`, if not given.",
                    "readOnly": true
                  },
                  "owner": {
                    "type": "object",
                    "description": "The person that is the owner of this item, if any.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "type": "object",
                        "description": "Person default email",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "email": {
                            "default": "",
                            "maxLength": 250,
                            "type": "string"
                          },
                          "default": {
                            "readOnly": true
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact email id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Work Email"
                          }
                        },
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      },
                      "household": {
                        "type": "object",
                        "description": "Person household",
                        "properties": {
                          "id": {
                            "readOnly": false,
                            "type": "integer",
                            "format": "int32",
                            "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                          },
                          "name": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "head_person_id": {
                            "nullable": true,
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "The person id of the household head."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact id."
                          },
                          "modified": {
                            "description": "The date when this record was last modified."
                          }
                        },
                        "readOnly": true
                      },
                      "is_household_head": {
                        "type": "boolean",
                        "description": "If set to true, it will make this person the head of household.",
                        "readOnly": true
                      },
                      "address": {
                        "type": "object",
                        "description": "Person default address",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "address1": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "address2": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "city": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "zip": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "latitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "longitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact address id."
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter state value",
                            "example": "FL"
                          },
                          "country_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter country value",
                            "example": "US"
                          },
                          "label": {
                            "type": "string",
                            "example": "Home Address"
                          }
                        },
                        "readOnly": true
                      },
                      "phone": {
                        "type": "object",
                        "description": "Person default phone",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "number": {
                            "default": "",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "is_outside_us": {
                            "nullable": true,
                            "type": "boolean",
                            "default": false
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact individual contact method id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Cell"
                          }
                        },
                        "readOnly": true
                      },
                      "photo": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person default photo",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "default": "",
                            "maxLength": 500,
                            "type": "string"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person user, if any",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "active": {
                            "default": true,
                            "type": "boolean"
                          },
                          "verified": {
                            "default": true,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "api_id": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string",
                            "readOnly": true,
                            "description": "The API ID to use for API authentication."
                          }
                        }
                      }
                    },
                    "readOnly": true
                  }
                },
                "description": "The content item associated with this campaign. There can't be multiple campaigns associated with the same item.",
                "readOnly": true
              }
            }
          },
          "recurring": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "amount": {
                "default": "0.00",
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "is_anonymous": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "notes": {
                "nullable": true,
                "type": "string",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "extra_data": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "source_codes": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              }
            }
          },
          "donor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              }
            }
          },
          "affiliated_donor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              }
            }
          },
          "soft_credit": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              }
            }
          },
          "batch": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "amount": {
                "default": "0.00",
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "description": "Two decimal number without currency sign. This includes the transaction fee, if any.",
                "example": 20.33
              },
              "is_recurring": {
                "default": false,
                "type": "boolean",
                "description": "This was a recurring contribution or a one time contribution. false=One Time, true=Recurring."
              },
              "is_online": {
                "default": false,
                "type": "boolean",
                "description": "This was an online transaction or an offline cash/check contribution. false=Offline, true=Online."
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Record's ID from the external data source.",
                "example": "GIFT-BATCH-01"
              },
              "transaction_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Transaction code returned by the payment gateway.",
                "example": "13414747685"
              },
              "success": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "Determines if this was a successful contribution. false=Failed, true=Successful."
              },
              "received": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "Date when the gift was received."
              },
              "is_testing": {
                "default": false,
                "type": "boolean",
                "description": "Determines if this was a test contribution. false=Live, true=Testing."
              },
              "processed": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when the contribution was processed by the accounting department."
              },
              "offline_type": {
                "nullable": true,
                "maxLength": 20,
                "type": "string",
                "description": "One of the offline methods configured in Contributions.",
                "enum": [
                  "cash",
                  "check"
                ]
              },
              "offline_check_number": {
                "nullable": true,
                "maxLength": 20,
                "type": "string",
                "description": "Reference number. E.g. check number if offline type is check."
              },
              "source_codes": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "description": "Source codes for the contribution batch separated by commas.",
                "example": "432423"
              },
              "currency": {
                "nullable": true,
                "default": "USD",
                "maxLength": 3,
                "type": "string",
                "description": "The 3 letter currency code. [http://en.wikipedia.org/wiki/ISO_4217](http://en.wikipedia.org/wiki/ISO_4217)",
                "example": "USD"
              },
              "ip_address": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "The IP address of the donor.",
                "example": "192.248.228.111"
              },
              "pending": {
                "default": false,
                "type": "boolean",
                "description": "Determines if this is a pending contribution."
              },
              "is_refund": {
                "default": false,
                "type": "boolean",
                "description": "Determines if this contribution is a refund."
              },
              "refund_contribution_batch_id": {
                "nullable": true,
                "type": "integer",
                "format": "int32"
              },
              "transaction_fee": {
                "default": "0.00",
                "maxLength": "10,2",
                "type": "number",
                "format": "double"
              },
              "tribute_type": {
                "nullable": true,
                "maxLength": 200,
                "type": "string",
                "description": ""
              },
              "tribute_name": {
                "nullable": true,
                "maxLength": 200,
                "type": "string",
                "description": ""
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous Gift ID."
              },
              "site": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true
                  },
                  "require_authentication": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  }
                }
              },
              "site_channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "status": {
                    "default": "",
                    "maxLength": 8,
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "title": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true
                  },
                  "date_format": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "time_format": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "timezone": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "force_primary_domain": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_mobile": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "session_timeout": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "session_timeout_browser_close": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "captcha_after_logins": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "permission_access": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "robots": {
                    "nullable": true,
                    "type": "string",
                    "readOnly": true
                  },
                  "is_offline": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "offline_message": {
                    "nullable": true,
                    "type": "string",
                    "readOnly": true
                  },
                  "force_https": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "template_theme": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "payment_method": {
                "type": "object",
                "description": "Required if it's an online contribution batch",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "last_four": {
                    "nullable": true,
                    "maxLength": 4,
                    "type": "string",
                    "readOnly": true
                  },
                  "expiration_date": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                  },
                  "external_id": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "deleted": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "gateway": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "test_mode": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "person_profile_code_override": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true
                  },
                  "currency": {
                    "nullable": true,
                    "default": "USD",
                    "maxLength": 3,
                    "type": "string",
                    "readOnly": true
                  },
                  "card": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "name_on_card": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "card_type": {
                        "nullable": true,
                        "maxLength": 20,
                        "type": "string"
                      },
                      "card_number_last_four": {
                        "nullable": true,
                        "maxLength": 4,
                        "type": "string"
                      },
                      "expiration_month": {
                        "nullable": true,
                        "maxLength": 2,
                        "type": "string"
                      },
                      "expiration_year": {
                        "nullable": true,
                        "maxLength": 4,
                        "type": "string"
                      },
                      "profile_code": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true,
                        "description": "This will automatically be set to the value from the card configured for this site."
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "gateway": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true,
                        "description": "This will automatically be set to the card configured for this site."
                      },
                      "test_mode": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true,
                        "description": "This will automatically be set to the value from the card configured for this site."
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    },
                    "readOnly": true
                  },
                  "check": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "bank_name": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "name_on_account": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "profile_code": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "account_number_last_four": {
                        "nullable": true,
                        "maxLength": 4,
                        "type": "string"
                      },
                      "account_type": {
                        "nullable": true,
                        "maxLength": 20,
                        "type": "string"
                      },
                      "checking_type": {
                        "nullable": true,
                        "maxLength": 20,
                        "type": "string"
                      },
                      "routing_number": {
                        "nullable": true,
                        "maxLength": 9,
                        "type": "string"
                      },
                      "gateway": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true,
                        "description": "This will automatically be set to the check configured for this site."
                      },
                      "test_mode": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true,
                        "description": "This will automatically be set to the value from the check configured for this site."
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    },
                    "readOnly": true
                  },
                  "paypal": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "gateway": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "test_mode": {
                        "default": false,
                        "type": "boolean"
                      },
                      "name_on_account": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "email": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "profile_code": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    },
                    "readOnly": true
                  },
                  "site": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "require_authentication": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "readOnly": true
                  },
                  "person": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr."
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr."
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean"
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id."
                      }
                    },
                    "readOnly": true
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "address1": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "address2": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "city": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "zip": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "latitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "longitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact address id."
                      },
                      "state_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter state value",
                        "example": "FL"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter country value",
                        "example": "US"
                      },
                      "label": {
                        "type": "string",
                        "example": "Home Address"
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "recurring": {
                "required": [
                  "recurring_start_date",
                  "recurring_period",
                  "recurring_interval"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "active": {
                    "default": "1",
                    "type": "integer",
                    "format": "int32"
                  },
                  "recurring_start_date": {
                    "nullable": true,
                    "type": "string",
                    "format": "date"
                  },
                  "recurring_end_date": {
                    "nullable": true,
                    "type": "string",
                    "format": "date"
                  },
                  "prev_run_date": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                  },
                  "next_run_date": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                  },
                  "recurring_period": {
                    "nullable": true,
                    "maxLength": 20,
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "recurring_interval": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "description": "This number along with the `recurring_period` will determine the recurring frequency. eg: interval=1 and period=week -> Weekly, interval=1 and period=month -> Monthly, interval=3 and period=month -> Quarterly, interval=1 and period=year -> Yearly"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "processed_counter": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00"
                  },
                  "source_codes": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "description": "Source codes for the contribution batch separated by commas",
                    "example": "RadioOne,Promotion3"
                  },
                  "recurring_day_of_month": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "description": "The day of the month this contribution is processed. Can have values from 1 to 31"
                  },
                  "currency": {
                    "nullable": true,
                    "default": "USD",
                    "maxLength": 3,
                    "type": "string",
                    "description": "The 3 letter currency code. <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">http://en.wikipedia.org/wiki/ISO_4217</a>"
                  }
                }
              },
              "transactions": {
                "type": "array",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    },
                    "gateway": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string"
                    },
                    "transaction_code": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string"
                    },
                    "auth_code": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string"
                    },
                    "error_code": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string"
                    },
                    "error_message": {
                      "nullable": true,
                      "maxLength": 300,
                      "type": "string"
                    },
                    "amount": {
                      "default": "0.00",
                      "maxLength": "10,2",
                      "type": "number",
                      "format": "double"
                    },
                    "success": {
                      "default": false,
                      "type": "boolean"
                    },
                    "type": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string"
                    },
                    "created": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "settled": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00"
                    },
                    "test_mode": {
                      "default": false,
                      "type": "boolean"
                    },
                    "modified": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "external_id": {
                      "default": "",
                      "maxLength": 50,
                      "type": "string"
                    },
                    "currency": {
                      "nullable": true,
                      "default": "USD",
                      "maxLength": 3,
                      "type": "string"
                    },
                    "pending": {
                      "default": false,
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ContributionBatch": {
        "required": [
          "amount",
          "received",
          "is_online",
          "success",
          "currency",
          "site",
          "site_channel",
          "donor"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double",
            "description": "Two decimal number without currency sign. This includes the transaction fee, if any.",
            "example": 20.33
          },
          "is_recurring": {
            "default": false,
            "type": "boolean",
            "description": "This was a recurring contribution or a one time contribution. false=One Time, true=Recurring."
          },
          "is_online": {
            "default": false,
            "type": "boolean",
            "description": "This was an online transaction or an offline cash/check contribution. false=Offline, true=Online."
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Record's ID from the external data source.",
            "example": "GIFT-BATCH-01"
          },
          "transaction_code": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Transaction code returned by the payment gateway.",
            "example": "13414747685"
          },
          "success": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "description": "Determines if this was a successful contribution. false=Failed, true=Successful."
          },
          "received": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "Date when the gift was received."
          },
          "is_testing": {
            "default": false,
            "type": "boolean",
            "description": "Determines if this was a test contribution. false=Live, true=Testing."
          },
          "processed": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when the contribution was processed by the accounting department."
          },
          "offline_type": {
            "nullable": true,
            "maxLength": 20,
            "type": "string",
            "description": "One of the offline methods configured in Contributions.",
            "enum": [
              "cash",
              "check"
            ]
          },
          "offline_check_number": {
            "nullable": true,
            "maxLength": 20,
            "type": "string",
            "description": "Reference number. E.g. check number if offline type is check."
          },
          "source_codes": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "description": "Source codes for the contribution batch separated by commas.",
            "example": "432423"
          },
          "currency": {
            "nullable": true,
            "default": "USD",
            "maxLength": 3,
            "type": "string",
            "description": "The 3 letter currency code. [http://en.wikipedia.org/wiki/ISO_4217](http://en.wikipedia.org/wiki/ISO_4217)",
            "example": "USD"
          },
          "ip_address": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "The IP address of the donor.",
            "example": "192.248.228.111"
          },
          "pending": {
            "default": false,
            "type": "boolean",
            "description": "Determines if this is a pending contribution."
          },
          "is_refund": {
            "default": false,
            "type": "boolean",
            "description": "Determines if this contribution is a refund."
          },
          "refund_contribution_batch_id": {
            "nullable": true,
            "type": "integer",
            "format": "int32"
          },
          "transaction_fee": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "tribute_type": {
            "nullable": true,
            "maxLength": 200,
            "type": "string",
            "description": ""
          },
          "tribute_name": {
            "nullable": true,
            "maxLength": 200,
            "type": "string",
            "description": ""
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous Gift ID."
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "require_authentication": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              }
            }
          },
          "site_channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "default": "",
                "maxLength": 8,
                "type": "string",
                "readOnly": true
              },
              "name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "title": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "date_format": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "time_format": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "timezone": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "force_primary_domain": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_mobile": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "session_timeout": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "session_timeout_browser_close": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "captcha_after_logins": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "permission_access": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "robots": {
                "nullable": true,
                "type": "string",
                "readOnly": true
              },
              "is_offline": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "offline_message": {
                "nullable": true,
                "type": "string",
                "readOnly": true
              },
              "force_https": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "template_theme": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              }
            }
          },
          "donor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              }
            }
          },
          "affiliated_donor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              }
            }
          },
          "payment_method": {
            "type": "object",
            "description": "Required if it's an online contribution batch",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "archived": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "last_four": {
                "nullable": true,
                "maxLength": 4,
                "type": "string",
                "readOnly": true
              },
              "expiration_date": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "external_id": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "deleted": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "gateway": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "test_mode": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "person_profile_code_override": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "currency": {
                "nullable": true,
                "default": "USD",
                "maxLength": 3,
                "type": "string",
                "readOnly": true
              },
              "card": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "name_on_card": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "card_type": {
                    "nullable": true,
                    "maxLength": 20,
                    "type": "string"
                  },
                  "card_number_last_four": {
                    "nullable": true,
                    "maxLength": 4,
                    "type": "string"
                  },
                  "expiration_month": {
                    "nullable": true,
                    "maxLength": 2,
                    "type": "string"
                  },
                  "expiration_year": {
                    "nullable": true,
                    "maxLength": 4,
                    "type": "string"
                  },
                  "profile_code": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true,
                    "description": "This will automatically be set to the value from the card configured for this site."
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "gateway": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true,
                    "description": "This will automatically be set to the card configured for this site."
                  },
                  "test_mode": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true,
                    "description": "This will automatically be set to the value from the card configured for this site."
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "check": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "bank_name": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "name_on_account": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "profile_code": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "account_number_last_four": {
                    "nullable": true,
                    "maxLength": 4,
                    "type": "string"
                  },
                  "account_type": {
                    "nullable": true,
                    "maxLength": 20,
                    "type": "string"
                  },
                  "checking_type": {
                    "nullable": true,
                    "maxLength": 20,
                    "type": "string"
                  },
                  "routing_number": {
                    "nullable": true,
                    "maxLength": 9,
                    "type": "string"
                  },
                  "gateway": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "readOnly": true,
                    "description": "This will automatically be set to the check configured for this site."
                  },
                  "test_mode": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true,
                    "description": "This will automatically be set to the value from the check configured for this site."
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "paypal": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "gateway": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "test_mode": {
                    "default": false,
                    "type": "boolean"
                  },
                  "name_on_account": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "email": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "profile_code": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "site": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "require_authentication": {
                    "default": false,
                    "type": "boolean"
                  }
                },
                "readOnly": true
              },
              "person": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "nullable": true,
                    "maxLength": 30,
                    "type": "string",
                    "example": "Mr."
                  },
                  "firstname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "middlename": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "lastname": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "suffix": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "example": "Jr."
                  },
                  "gender": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "enum": [
                      "m",
                      "f"
                    ]
                  },
                  "birthday": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "description": "In the format `Y-m-d`"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string",
                    "format": "email"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "description": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "is_group": {
                    "default": false,
                    "type": "boolean"
                  },
                  "fullname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual id."
                  }
                },
                "readOnly": true
              },
              "address": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              }
            }
          },
          "recurring": {
            "required": [
              "recurring_start_date",
              "recurring_period",
              "recurring_interval"
            ],
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "active": {
                "default": "1",
                "type": "integer",
                "format": "int32"
              },
              "recurring_start_date": {
                "nullable": true,
                "type": "string",
                "format": "date"
              },
              "recurring_end_date": {
                "nullable": true,
                "type": "string",
                "format": "date"
              },
              "prev_run_date": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "next_run_date": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "recurring_period": {
                "nullable": true,
                "maxLength": 20,
                "type": "string",
                "enum": [
                  "day",
                  "week",
                  "month",
                  "year"
                ]
              },
              "recurring_interval": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "This number along with the `recurring_period` will determine the recurring frequency. eg: interval=1 and period=week -> Weekly, interval=1 and period=month -> Monthly, interval=3 and period=month -> Quarterly, interval=1 and period=year -> Yearly"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "processed_counter": {
                "default": "0",
                "type": "integer",
                "format": "int32"
              },
              "archived": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00"
              },
              "source_codes": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "description": "Source codes for the contribution batch separated by commas",
                "example": "RadioOne,Promotion3"
              },
              "recurring_day_of_month": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "The day of the month this contribution is processed. Can have values from 1 to 31"
              },
              "currency": {
                "nullable": true,
                "default": "USD",
                "maxLength": 3,
                "type": "string",
                "description": "The 3 letter currency code. <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">http://en.wikipedia.org/wiki/ISO_4217</a>"
              }
            }
          },
          "contributions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32"
                },
                "amount": {
                  "default": "0.00",
                  "maxLength": "10,2",
                  "type": "number",
                  "format": "double",
                  "description": "Two decimal number without currency sign.",
                  "example": 10
                },
                "is_recurring": {
                  "default": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "is_online": {
                  "default": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "is_anonymous": {
                  "default": false,
                  "type": "boolean",
                  "description": "Mark this contribution as anonymous.",
                  "readOnly": true
                },
                "paid_transaction_fee": {
                  "default": false,
                  "type": "boolean"
                },
                "error": {
                  "nullable": true,
                  "maxLength": 300,
                  "type": "string"
                },
                "notes": {
                  "nullable": true,
                  "type": "string",
                  "description": "Notes for the accounting department or campaign owner.",
                  "example": "Have a great day!"
                },
                "success": {
                  "default": "0",
                  "type": "integer",
                  "format": "int32",
                  "description": "Determines if this was a successful contribution.",
                  "readOnly": true
                },
                "created": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "readOnly": true
                },
                "modified": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "readOnly": true
                },
                "external_id": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "extra_data": {
                  "nullable": true,
                  "maxLength": 100,
                  "type": "string",
                  "description": "Using this field you can associate extra information with the contribution.",
                  "example": "Missionary #123"
                },
                "source_codes": {
                  "nullable": true,
                  "maxLength": 100,
                  "type": "string"
                },
                "pending": {
                  "default": false,
                  "type": "boolean",
                  "readOnly": true
                },
                "transaction_fee": {
                  "default": "0.00",
                  "maxLength": "10,2",
                  "type": "number",
                  "format": "double"
                },
                "campaign": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "goal_amount": {
                      "nullable": true,
                      "maxLength": "10,2",
                      "type": "number",
                      "format": "double",
                      "readOnly": true
                    },
                    "min_amount": {
                      "nullable": true,
                      "maxLength": "10,2",
                      "type": "number",
                      "format": "double",
                      "readOnly": true
                    },
                    "max_amount": {
                      "nullable": true,
                      "maxLength": "10,2",
                      "type": "number",
                      "format": "double",
                      "readOnly": true
                    },
                    "start": {
                      "nullable": true,
                      "type": "string",
                      "format": "date",
                      "readOnly": true
                    },
                    "end": {
                      "nullable": true,
                      "type": "string",
                      "format": "date",
                      "readOnly": true
                    },
                    "image": {
                      "nullable": true,
                      "maxLength": 500,
                      "type": "string",
                      "readOnly": true
                    },
                    "created": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "modified": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "external_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "show_extra_field": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "extra_field_label": {
                      "nullable": true,
                      "maxLength": 100,
                      "type": "string",
                      "readOnly": true
                    },
                    "extra_field_is_required": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "allow_multiple_in_cart": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "is_disabled": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "accounting_code": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "inventory_status": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "virtuous_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "description": "Virtuous project id.",
                      "readOnly": true
                    },
                    "item": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "name": {
                          "nullable": true,
                          "maxLength": 100,
                          "type": "string",
                          "readOnly": true
                        },
                        "views": {
                          "default": "0",
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number of views for this item."
                        },
                        "publish_datetime": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date this item becomes available for publishing.",
                          "readOnly": true
                        },
                        "unpublish_datetime": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date this item becomes unavailable for publishing.",
                          "readOnly": true
                        },
                        "visibility": {
                          "default": "0",
                          "type": "integer",
                          "format": "int32",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only.",
                          "readOnly": true
                        },
                        "created": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "readOnly": true
                        },
                        "modified": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "readOnly": true
                        },
                        "external_id": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "description": "An external system id.",
                          "readOnly": true
                        },
                        "is_searchable": {
                          "default": true,
                          "type": "boolean",
                          "description": "Controls if this item is searchable or not, on the site.",
                          "readOnly": true
                        },
                        "alias": {
                          "nullable": true,
                          "maxLength": 100,
                          "type": "string",
                          "pattern": "/^[A-Za-z0-9_-]+$/",
                          "description": "Created automatically from `name`, if not given.",
                          "readOnly": true
                        },
                        "owner": {
                          "type": "object",
                          "description": "The person that is the owner of this item, if any.",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "title": {
                              "nullable": true,
                              "maxLength": 30,
                              "type": "string",
                              "example": "Mr.",
                              "readOnly": true
                            },
                            "firstname": {
                              "default": "",
                              "maxLength": 100,
                              "type": "string",
                              "readOnly": true
                            },
                            "middlename": {
                              "nullable": true,
                              "maxLength": 50,
                              "type": "string",
                              "readOnly": true
                            },
                            "lastname": {
                              "default": "",
                              "maxLength": 50,
                              "type": "string",
                              "readOnly": true
                            },
                            "suffix": {
                              "nullable": true,
                              "maxLength": 10,
                              "type": "string",
                              "example": "Jr.",
                              "readOnly": true
                            },
                            "gender": {
                              "nullable": true,
                              "maxLength": 10,
                              "type": "string",
                              "enum": [
                                "m",
                                "f"
                              ],
                              "readOnly": true
                            },
                            "birthday": {
                              "nullable": true,
                              "type": "string",
                              "format": "date",
                              "description": "In the format `Y-m-d`",
                              "readOnly": true
                            },
                            "email": {
                              "type": "object",
                              "description": "Person default email",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "email": {
                                  "default": "",
                                  "maxLength": 250,
                                  "type": "string"
                                },
                                "default": {
                                  "readOnly": true
                                },
                                "created": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was created.",
                                  "readOnly": true
                                },
                                "modified": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was last modified.",
                                  "readOnly": true
                                },
                                "virtuous_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "Virtuous contact email id."
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Work Email"
                                }
                              },
                              "readOnly": true
                            },
                            "created": {
                              "nullable": true,
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-04-04T11:39:57+00:00",
                              "description": "The date when this record was created.",
                              "readOnly": true
                            },
                            "modified": {
                              "nullable": true,
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-04-04T11:39:57+00:00",
                              "description": "The date when this record was last modified.",
                              "readOnly": true
                            },
                            "description": {
                              "default": "",
                              "maxLength": 500,
                              "type": "string",
                              "readOnly": true
                            },
                            "is_group": {
                              "default": false,
                              "type": "boolean",
                              "readOnly": true
                            },
                            "fullname": {
                              "default": "",
                              "maxLength": 100,
                              "type": "string",
                              "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                              "readOnly": true
                            },
                            "external_id": {
                              "nullable": true,
                              "maxLength": 50,
                              "type": "string",
                              "description": "An external system id.",
                              "readOnly": true
                            },
                            "virtuous_id": {
                              "nullable": true,
                              "maxLength": 50,
                              "type": "string",
                              "description": "Virtuous contact individual id.",
                              "readOnly": true
                            },
                            "household": {
                              "type": "object",
                              "description": "Person household",
                              "properties": {
                                "id": {
                                  "readOnly": false,
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                                },
                                "name": {
                                  "nullable": true,
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "external_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "An external system id."
                                },
                                "head_person_id": {
                                  "nullable": true,
                                  "type": "integer",
                                  "format": "int32",
                                  "readOnly": true,
                                  "description": "The person id of the household head."
                                },
                                "virtuous_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "Virtuous contact id."
                                },
                                "modified": {
                                  "description": "The date when this record was last modified."
                                }
                              },
                              "readOnly": true
                            },
                            "is_household_head": {
                              "type": "boolean",
                              "description": "If set to true, it will make this person the head of household.",
                              "readOnly": true
                            },
                            "address": {
                              "type": "object",
                              "description": "Person default address",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "address1": {
                                  "nullable": true,
                                  "maxLength": 300,
                                  "type": "string"
                                },
                                "address2": {
                                  "nullable": true,
                                  "maxLength": 300,
                                  "type": "string"
                                },
                                "city": {
                                  "nullable": true,
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "zip": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string"
                                },
                                "default": {
                                  "default": false,
                                  "type": "boolean"
                                },
                                "created": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was created.",
                                  "readOnly": true
                                },
                                "modified": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was last modified.",
                                  "readOnly": true
                                },
                                "latitude": {
                                  "nullable": true,
                                  "maxLength": "10,6",
                                  "type": "number",
                                  "format": "double",
                                  "readOnly": true
                                },
                                "longitude": {
                                  "nullable": true,
                                  "maxLength": "10,6",
                                  "type": "number",
                                  "format": "double",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "An external system id."
                                },
                                "virtuous_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "Virtuous contact address id."
                                },
                                "state_code": {
                                  "type": "string",
                                  "maxLength": 2,
                                  "description": "A two-letter state value",
                                  "example": "FL"
                                },
                                "country_code": {
                                  "type": "string",
                                  "maxLength": 2,
                                  "description": "A two-letter country value",
                                  "example": "US"
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Home Address"
                                }
                              },
                              "readOnly": true
                            },
                            "phone": {
                              "type": "object",
                              "description": "Person default phone",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "number": {
                                  "default": "",
                                  "maxLength": 50,
                                  "type": "string"
                                },
                                "default": {
                                  "default": false,
                                  "type": "boolean"
                                },
                                "created": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was created.",
                                  "readOnly": true
                                },
                                "modified": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was last modified.",
                                  "readOnly": true
                                },
                                "is_outside_us": {
                                  "nullable": true,
                                  "type": "boolean",
                                  "default": false
                                },
                                "virtuous_id": {
                                  "nullable": true,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "Virtuous contact individual contact method id."
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Cell"
                                }
                              },
                              "readOnly": true
                            },
                            "photo": {
                              "type": "object",
                              "readOnly": true,
                              "description": "Person default photo",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "default": "",
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                "created": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was created.",
                                  "readOnly": true
                                },
                                "modified": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was last modified.",
                                  "readOnly": true
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "readOnly": true,
                              "description": "Person user, if any",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "active": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "verified": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "created": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was created.",
                                  "readOnly": true
                                },
                                "modified": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-04-04T11:39:57+00:00",
                                  "description": "The date when this record was last modified.",
                                  "readOnly": true
                                },
                                "api_id": {
                                  "nullable": true,
                                  "maxLength": 100,
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The API ID to use for API authentication."
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      },
                      "description": "The content item associated with this campaign. There can't be multiple campaigns associated with the same item.",
                      "readOnly": true
                    }
                  }
                },
                "recurring": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "amount": {
                      "default": "0.00",
                      "maxLength": "10,2",
                      "type": "number",
                      "format": "double",
                      "readOnly": true
                    },
                    "is_anonymous": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "created": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "modified": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "readOnly": true
                    },
                    "notes": {
                      "nullable": true,
                      "type": "string",
                      "readOnly": true
                    },
                    "external_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "extra_data": {
                      "nullable": true,
                      "maxLength": 100,
                      "type": "string",
                      "readOnly": true
                    },
                    "source_codes": {
                      "nullable": true,
                      "maxLength": 100,
                      "type": "string",
                      "readOnly": true
                    },
                    "virtuous_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "soft_credit": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "title": {
                      "nullable": true,
                      "maxLength": 30,
                      "type": "string",
                      "example": "Mr.",
                      "readOnly": true
                    },
                    "firstname": {
                      "default": "",
                      "maxLength": 100,
                      "type": "string",
                      "readOnly": true
                    },
                    "middlename": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "lastname": {
                      "default": "",
                      "maxLength": 50,
                      "type": "string",
                      "readOnly": true
                    },
                    "suffix": {
                      "nullable": true,
                      "maxLength": 10,
                      "type": "string",
                      "example": "Jr.",
                      "readOnly": true
                    },
                    "gender": {
                      "nullable": true,
                      "maxLength": 10,
                      "type": "string",
                      "enum": [
                        "m",
                        "f"
                      ],
                      "readOnly": true
                    },
                    "birthday": {
                      "nullable": true,
                      "type": "string",
                      "format": "date",
                      "description": "In the format `Y-m-d`",
                      "readOnly": true
                    },
                    "email": {
                      "default": "",
                      "maxLength": 250,
                      "type": "string",
                      "format": "email",
                      "readOnly": true
                    },
                    "created": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "description": "The date when this record was created.",
                      "readOnly": true
                    },
                    "modified": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-04-04T11:39:57+00:00",
                      "description": "The date when this record was last modified.",
                      "readOnly": true
                    },
                    "description": {
                      "default": "",
                      "maxLength": 500,
                      "type": "string",
                      "readOnly": true
                    },
                    "is_group": {
                      "default": false,
                      "type": "boolean",
                      "readOnly": true
                    },
                    "fullname": {
                      "default": "",
                      "maxLength": 100,
                      "type": "string",
                      "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                      "readOnly": true
                    },
                    "external_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "description": "An external system id.",
                      "readOnly": true
                    },
                    "virtuous_id": {
                      "nullable": true,
                      "maxLength": 50,
                      "type": "string",
                      "description": "Virtuous contact individual id.",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "transactions": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32"
                },
                "gateway": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "transaction_code": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "auth_code": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "error_code": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "error_message": {
                  "nullable": true,
                  "maxLength": 300,
                  "type": "string"
                },
                "amount": {
                  "default": "0.00",
                  "maxLength": "10,2",
                  "type": "number",
                  "format": "double"
                },
                "success": {
                  "default": false,
                  "type": "boolean"
                },
                "type": {
                  "nullable": true,
                  "maxLength": 50,
                  "type": "string"
                },
                "created": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "readOnly": true
                },
                "settled": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00"
                },
                "test_mode": {
                  "default": false,
                  "type": "boolean"
                },
                "modified": {
                  "nullable": true,
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-04-04T11:39:57+00:00",
                  "readOnly": true
                },
                "external_id": {
                  "default": "",
                  "maxLength": 50,
                  "type": "string"
                },
                "currency": {
                  "nullable": true,
                  "default": "USD",
                  "maxLength": 3,
                  "type": "string"
                },
                "pending": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "CrmEntity": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "alias": {
            "default": "",
            "maxLength": 50,
            "type": "string"
          },
          "name": {
            "default": "",
            "maxLength": 100,
            "type": "string"
          },
          "is_multi": {
            "default": false,
            "type": "boolean"
          },
          "order": {
            "default": "0",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HistoricGift": {
        "required": [
          "receiver",
          "fund_id",
          "donor",
          "donor_person_external_id",
          "amount",
          "currency",
          "received"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "is_native": {
            "default": false,
            "type": "boolean",
            "description": "True if the gift originated in Site Stacker."
          },
          "is_imported": {
            "default": false,
            "type": "boolean",
            "description": "True if the gift was imported. Usually for internal purposes."
          },
          "donor_person_external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "**Required if** `donor.id` is not set. The donor external id."
          },
          "amount": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double",
            "description": "Two decimal number without currency sign.",
            "example": "12.00"
          },
          "currency": {
            "nullable": true,
            "default": "USD",
            "maxLength": 3,
            "type": "string",
            "enum": [
              "USD",
              "CAD"
            ],
            "example": "USD"
          },
          "received": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The gift received date."
          },
          "contribution_type": {
            "nullable": true,
            "maxLength": 200,
            "type": "string",
            "examples": [
              "Offline",
              "One-Time",
              "Recurring"
            ]
          },
          "fund_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "**Required if** `receiver.id` is not set and you want the gift to be associated with a person. This field is mapped according to the Historic Giving component settings, in admin."
          },
          "fund_name": {
            "nullable": true,
            "maxLength": 200,
            "type": "string",
            "description": "The fund name (or campaign name)."
          },
          "firstname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "Donor first name. Will be populated if not set from `donor.id`."
          },
          "lastname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "Donor last name. Will be populated if not set from `donor.id`."
          },
          "fullname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "Donor or organization full name. Will be populated if not set from `donor.id`."
          },
          "email": {
            "default": "",
            "maxLength": 250,
            "type": "string",
            "description": "Donor email. Will be populated if not set from `donor.id`."
          },
          "phone": {
            "default": "",
            "maxLength": 50,
            "type": "string",
            "description": "Donor phone number. Will be populated if not set from `donor.id`.",
            "example": "(721) 123-1311"
          },
          "latitude": {
            "nullable": true,
            "maxLength": "10,6",
            "type": "number",
            "format": "double",
            "description": "The donor latitude, based on the address.",
            "readOnly": true
          },
          "longitude": {
            "nullable": true,
            "maxLength": "10,6",
            "type": "number",
            "format": "double",
            "description": "The donor longitude, based on the address.",
            "readOnly": true
          },
          "address1": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Donor address line 1. Will be populated if not set from `donor.id`."
          },
          "address2": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Donor address line 2. Will be populated if not set from `donor.id`."
          },
          "city": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "description": "Donor city. Will be populated if not set from `donor.id`."
          },
          "zip": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Donor zip / postal code. Will be populated if not set from `donor.id`."
          },
          "state": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "description": "Donor state code (preferred 2 letter code). Will be populated if not set from `donor.id`.",
            "example": "FL"
          },
          "country": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "description": "Donor country code (preferred 2 letter code). Will be populated if not set from `donor.id`.",
            "example": "US"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "affiliated_person_external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "External system id for the affiliated donor."
          },
          "affiliated_person_firstname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "The affiliated donor first name, if the donor is an organization. Will be populated if not set from `affiliated_donor.id`."
          },
          "affiliated_person_lastname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "The affiliated donor last name, if the donor is an organization. Will be populated if not set from `affiliated_donor.id`."
          },
          "affiliated_person_fullname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "The affiliated donor full name, if the donor is an organization. Will be populated if not set from `affiliated_donor.id`."
          },
          "affiliated_person_email": {
            "default": "",
            "maxLength": 250,
            "type": "string",
            "description": "The affiliated donor email, if the donor is an organization. Will be populated if not set from `affiliated_donor.id`."
          },
          "is_anonymous": {
            "default": false,
            "type": "boolean"
          },
          "notes": {
            "nullable": true,
            "type": "string"
          },
          "offline_type": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "offline_check_number": {
            "nullable": true,
            "maxLength": 20,
            "type": "string"
          },
          "source_codes": {
            "nullable": true,
            "maxLength": 1000,
            "type": "string"
          },
          "last_four": {
            "nullable": true,
            "maxLength": 4,
            "type": "string"
          },
          "expiration_date": {
            "nullable": true,
            "type": "string",
            "format": "date"
          },
          "donor_type": {
            "default": "person",
            "maxLength": 10,
            "type": "string"
          },
          "donor_household_external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "record_type": {
            "nullable": true,
            "default": "donation",
            "maxLength": 200,
            "type": "string"
          },
          "deductible_amount": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "non_deductible_amount": {
            "default": "0.00",
            "maxLength": "10,2",
            "type": "number",
            "format": "double"
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "The Virtuous `GiftId-ProjectId`."
          },
          "donor_person_virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact individual id of the donor."
          },
          "donor_household_virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact id of the donor. For internal use."
          },
          "payment_method_type": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "campaign_external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "donor": {
            "type": "object",
            "description": "**Required if** `donor.external_id` is not set. The donor Site Stacker person id.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "is_household_head": {
                "type": "boolean",
                "description": "If set to true, it will make this person the head of household.",
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              },
              "photo": {
                "type": "object",
                "readOnly": true,
                "description": "Person default photo",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "path": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  }
                }
              },
              "user": {
                "type": "object",
                "readOnly": true,
                "description": "Person user, if any",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "active": {
                    "default": true,
                    "type": "boolean"
                  },
                  "verified": {
                    "default": true,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "api_id": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true,
                    "description": "The API ID to use for API authentication."
                  }
                }
              }
            }
          },
          "donor_household": {
            "type": "object",
            "description": "The household the donor belonged to at the time of the gift.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "head_person_id": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true,
                "description": "The person id of the household head."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact id.",
                "readOnly": true
              },
              "modified": {
                "description": "The date when this record was last modified.",
                "readOnly": true
              }
            }
          },
          "affiliated_donor": {
            "type": "object",
            "description": "The affiliated donor id (Site Stacker id), if the donor is an organization. Set either this or `affiliated_person_external_id`.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "is_household_head": {
                "type": "boolean",
                "description": "If set to true, it will make this person the head of household.",
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              },
              "photo": {
                "type": "object",
                "readOnly": true,
                "description": "Person default photo",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "path": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  }
                }
              },
              "user": {
                "type": "object",
                "readOnly": true,
                "description": "Person user, if any",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "active": {
                    "default": true,
                    "type": "boolean"
                  },
                  "verified": {
                    "default": true,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "api_id": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true,
                    "description": "The API ID to use for API authentication."
                  }
                }
              }
            }
          },
          "receiver": {
            "type": "object",
            "description": "**Required if** `fund_id` is not set and you want the gift to be associated with a person. The receiving Site Stacker person id.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              }
            }
          },
          "soft_credit": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              }
            }
          },
          "campaign": {
            "type": "object",
            "description": "The Site Stacker campaign, if the gift originated in Site Stacker.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "goal_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "min_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "max_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "start": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "end": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "readOnly": true
              },
              "image": {
                "nullable": true,
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "show_extra_field": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "extra_field_label": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "extra_field_is_required": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "allow_multiple_in_cart": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_disabled": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "accounting_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "inventory_status": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous project id.",
                "readOnly": true
              }
            }
          },
          "contribution": {
            "type": "object",
            "description": "The Site Stacker contribution, if the gift originated in Site Stacker.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "amount": {
                "default": "0.00",
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "description": "Two decimal number without currency sign.",
                "example": 10,
                "readOnly": true
              },
              "is_recurring": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_online": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_anonymous": {
                "default": false,
                "type": "boolean",
                "description": "Mark this contribution as anonymous.",
                "readOnly": true
              },
              "paid_transaction_fee": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "error": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "readOnly": true
              },
              "notes": {
                "nullable": true,
                "type": "string",
                "description": "Notes for the accounting department or campaign owner.",
                "example": "Have a great day!",
                "readOnly": true
              },
              "success": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "Determines if this was a successful contribution.",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "extra_data": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "description": "Using this field you can associate extra information with the contribution.",
                "example": "Missionary #123",
                "readOnly": true
              },
              "source_codes": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "pending": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "transaction_fee": {
                "default": "0.00",
                "maxLength": "10,2",
                "type": "number",
                "format": "double",
                "readOnly": true
              }
            }
          },
          "site": {
            "type": "object",
            "description": "The Site Stacker site, if the gift was made on a Site Stacker site.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "require_authentication": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              }
            }
          },
          "site_channel": {
            "type": "object",
            "description": "The Site Stacker site channel, if the gift was made on a Site Stacker site.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "default": "",
                "maxLength": 8,
                "type": "string",
                "readOnly": true
              },
              "name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "title": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "date_format": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "time_format": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "timezone": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "force_primary_domain": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "is_mobile": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "session_timeout": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "session_timeout_browser_close": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "captcha_after_logins": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "permission_access": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "robots": {
                "nullable": true,
                "type": "string",
                "readOnly": true
              },
              "is_offline": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "offline_message": {
                "nullable": true,
                "type": "string",
                "readOnly": true
              },
              "force_https": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "template_theme": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              }
            }
          },
          "data": {
            "type": "object",
            "description": "An object with all the custom data for this gift, as configured in `Historic Giving > Settings > Manage Extra Fields`."
          }
        }
      },
      "Item": {
        "description": "Content item of a certain type, with translations and versions with dynamic fields.",
        "required": [
          "name",
          "folder"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "nullable": true,
            "maxLength": 100,
            "type": "string"
          },
          "views": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "description": "The number of views for this item."
          },
          "publish_datetime": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date this item becomes available for publishing."
          },
          "unpublish_datetime": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date this item becomes unavailable for publishing."
          },
          "visibility": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only."
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "An external system id."
          },
          "is_searchable": {
            "default": true,
            "type": "boolean",
            "description": "Controls if this item is searchable or not, on the site."
          },
          "alias": {
            "nullable": true,
            "maxLength": 100,
            "type": "string",
            "pattern": "/^[A-Za-z0-9_-]+$/",
            "description": "Created automatically from `name`, if not given."
          },
          "folder": {
            "type": "object",
            "description": "The content folder that contains the item",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "description": "Content folder name. This name appears in `Site Planner > Content Explorer`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              }
            }
          },
          "language": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "abbreviation": {
                "default": "",
                "maxLength": 5,
                "type": "string",
                "description": "Language abbreviation, e.g. `en`, `en-uk`. Must be unique.",
                "pattern": "/[a-z]{2}(-[a-zA-Z]{2})?/"
              },
              "name": {
                "nullable": true,
                "maxLength": 20,
                "type": "string",
                "description": "Language name, e.g. `English`, `English (United Kingdom)`."
              }
            }
          },
          "campaign": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "goal_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double"
              },
              "min_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double"
              },
              "max_amount": {
                "nullable": true,
                "maxLength": "10,2",
                "type": "number",
                "format": "double"
              },
              "start": {
                "nullable": true,
                "type": "string",
                "format": "date"
              },
              "end": {
                "nullable": true,
                "type": "string",
                "format": "date"
              },
              "image": {
                "nullable": true,
                "maxLength": 500,
                "type": "string"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "show_extra_field": {
                "default": false,
                "type": "boolean"
              },
              "extra_field_label": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "extra_field_is_required": {
                "default": false,
                "type": "boolean"
              },
              "allow_multiple_in_cart": {
                "default": false,
                "type": "boolean"
              },
              "is_disabled": {
                "default": false,
                "type": "boolean"
              },
              "accounting_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "inventory_status": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous project id."
              }
            }
          },
          "stage": {
            "type": "object",
            "readOnly": true,
            "description": "Item workflow stage. You can see this in `Workflows`.",
            "required": [
              "name"
            ],
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Workflow stage name, e.g. `Unpublished`, `Published`."
              },
              "is_new": {
                "default": false,
                "type": "boolean",
                "description": "If not specified, new items go into this stage."
              },
              "is_live": {
                "default": false,
                "type": "boolean",
                "description": "The items in this stage are live (visible on the site)."
              },
              "notify": {
                "default": false,
                "type": "boolean",
                "description": "Internal only."
              },
              "order": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "Internal order number.",
                "readOnly": true
              },
              "color": {
                "nullable": true,
                "maxLength": 6,
                "type": "string",
                "description": "Internal only."
              }
            }
          },
          "type": {
            "type": "object",
            "readOnly": true,
            "description": "Content type, as configured in Architect.",
            "required": [
              "alias",
              "name"
            ],
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "alias": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "pattern": "/[a-zA-Z]+/",
                "description": "The content type alias. Should be `CamelCase`, without any spaces. Must be unique."
              },
              "name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "The content type name."
              }
            }
          },
          "owner": {
            "type": "object",
            "description": "The person that is the owner of this item, if any.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "type": "object",
                "description": "Person default email",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "email": {
                    "default": "",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "default": {
                    "readOnly": true
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact email id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Work Email"
                  }
                },
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              },
              "household": {
                "type": "object",
                "description": "Person household",
                "properties": {
                  "id": {
                    "readOnly": false,
                    "type": "integer",
                    "format": "int32",
                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "head_person_id": {
                    "nullable": true,
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The person id of the household head."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact id."
                  },
                  "modified": {
                    "description": "The date when this record was last modified."
                  }
                },
                "readOnly": true
              },
              "is_household_head": {
                "type": "boolean",
                "description": "If set to true, it will make this person the head of household.",
                "readOnly": true
              },
              "address": {
                "type": "object",
                "description": "Person default address",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "address1": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "address2": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "city": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "zip": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "latitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "longitude": {
                    "nullable": true,
                    "maxLength": "10,6",
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact address id."
                  },
                  "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter state value",
                    "example": "FL"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "A two-letter country value",
                    "example": "US"
                  },
                  "label": {
                    "type": "string",
                    "example": "Home Address"
                  }
                },
                "readOnly": true
              },
              "phone": {
                "type": "object",
                "description": "Person default phone",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "number": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "default": {
                    "default": false,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "is_outside_us": {
                    "nullable": true,
                    "type": "boolean",
                    "default": false
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual contact method id."
                  },
                  "label": {
                    "type": "string",
                    "example": "Cell"
                  }
                },
                "readOnly": true
              },
              "photo": {
                "type": "object",
                "readOnly": true,
                "description": "Person default photo",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "path": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  }
                }
              },
              "user": {
                "type": "object",
                "readOnly": true,
                "description": "Person user, if any",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "active": {
                    "default": true,
                    "type": "boolean"
                  },
                  "verified": {
                    "default": true,
                    "type": "boolean"
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "api_id": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "readOnly": true,
                    "description": "The API ID to use for API authentication."
                  }
                }
              }
            }
          },
          "version": {
            "type": "object",
            "readOnly": true,
            "description": "Item version.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "version_number": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "readOnly": true
              },
              "is_live": {
                "default": false,
                "type": "boolean",
                "description": "This version is live (visible on the site).",
                "readOnly": true
              },
              "is_last": {
                "default": false,
                "type": "boolean",
                "description": "This version is the last version saved for this item.",
                "readOnly": true
              }
            }
          },
          "tags": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "data": {
            "type": "object",
            "description": "An object with all the custom data for the specified language and version, as configured in `Architect` for the content type."
          }
        }
      },
      "NewsletterList": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 250,
            "type": "string"
          },
          "subscribed_person_cache": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "description": "The number of subscribers.",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "require_authentication": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              }
            }
          }
        }
      },
      "NewsletterSubscribedPerson": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "default": true,
            "type": "boolean",
            "description": "True if this subscriber should receive notifications."
          },
          "confirmed": {
            "default": true,
            "type": "boolean",
            "description": "True if the subscriber's email is confirmed."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "list": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "maxLength": 250,
                "type": "string",
                "readOnly": true
              },
              "subscribed_person_cache": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "description": "The number of subscribers.",
                "readOnly": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              }
            }
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              }
            }
          }
        }
      },
      "PaymentMethod": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "archived": {
            "default": false,
            "type": "boolean"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "last_four": {
            "nullable": true,
            "maxLength": 4,
            "type": "string"
          },
          "expiration_date": {
            "nullable": true,
            "type": "string",
            "format": "date"
          },
          "external_id": {
            "default": "",
            "maxLength": 50,
            "type": "string"
          },
          "deleted": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00"
          },
          "gateway": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "test_mode": {
            "default": false,
            "type": "boolean"
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "person_profile_code_override": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "currency": {
            "nullable": true,
            "default": "USD",
            "maxLength": 3,
            "type": "string"
          },
          "card": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "name_on_card": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "card_type": {
                "nullable": true,
                "maxLength": 20,
                "type": "string"
              },
              "card_number_last_four": {
                "nullable": true,
                "maxLength": 4,
                "type": "string"
              },
              "expiration_month": {
                "nullable": true,
                "maxLength": 2,
                "type": "string"
              },
              "expiration_year": {
                "nullable": true,
                "maxLength": 4,
                "type": "string"
              },
              "profile_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true,
                "description": "This will automatically be set to the value from the card configured for this site."
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "gateway": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true,
                "description": "This will automatically be set to the card configured for this site."
              },
              "test_mode": {
                "default": false,
                "type": "boolean",
                "readOnly": true,
                "description": "This will automatically be set to the value from the card configured for this site."
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              }
            }
          },
          "check": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "bank_name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "name_on_account": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "profile_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "account_number_last_four": {
                "nullable": true,
                "maxLength": 4,
                "type": "string"
              },
              "account_type": {
                "nullable": true,
                "maxLength": 20,
                "type": "string"
              },
              "checking_type": {
                "nullable": true,
                "maxLength": 20,
                "type": "string"
              },
              "routing_number": {
                "nullable": true,
                "maxLength": 9,
                "type": "string"
              },
              "gateway": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true,
                "description": "This will automatically be set to the check configured for this site."
              },
              "test_mode": {
                "default": false,
                "type": "boolean",
                "readOnly": true,
                "description": "This will automatically be set to the value from the check configured for this site."
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              }
            }
          },
          "paypal": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "gateway": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "test_mode": {
                "default": false,
                "type": "boolean"
              },
              "name_on_account": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "email": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "profile_code": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "readOnly": true
              }
            }
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "require_authentication": {
                "default": false,
                "type": "boolean"
              }
            }
          },
          "person": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "address1": {
                "nullable": true,
                "maxLength": 300,
                "type": "string"
              },
              "address2": {
                "nullable": true,
                "maxLength": 300,
                "type": "string"
              },
              "city": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "zip": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "default": {
                "default": false,
                "type": "boolean"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "latitude": {
                "nullable": true,
                "maxLength": "10,6",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "longitude": {
                "nullable": true,
                "maxLength": "10,6",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact address id."
              },
              "state_code": {
                "type": "string",
                "maxLength": 2,
                "description": "A two-letter state value",
                "example": "FL"
              },
              "country_code": {
                "type": "string",
                "maxLength": 2,
                "description": "A two-letter country value",
                "example": "US"
              },
              "label": {
                "type": "string",
                "example": "Home Address"
              }
            }
          }
        }
      },
      "Person": {
        "description": "CRM record.",
        "required": [],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "nullable": true,
            "maxLength": 30,
            "type": "string",
            "example": "Mr."
          },
          "firstname": {
            "default": "",
            "maxLength": 100,
            "type": "string"
          },
          "middlename": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "lastname": {
            "default": "",
            "maxLength": 50,
            "type": "string"
          },
          "suffix": {
            "nullable": true,
            "maxLength": 10,
            "type": "string",
            "example": "Jr."
          },
          "gender": {
            "nullable": true,
            "maxLength": 10,
            "type": "string",
            "enum": [
              "m",
              "f"
            ]
          },
          "birthday": {
            "nullable": true,
            "type": "string",
            "format": "date",
            "description": "In the format `Y-m-d`"
          },
          "email": {
            "type": "object",
            "description": "Person default email",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string"
              },
              "default": {
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact email id."
              },
              "label": {
                "type": "string",
                "example": "Work Email"
              }
            }
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was created.",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was last modified.",
            "readOnly": true
          },
          "description": {
            "default": "",
            "maxLength": 500,
            "type": "string"
          },
          "is_group": {
            "default": false,
            "type": "boolean"
          },
          "fullname": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "An external system id."
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact individual id."
          },
          "household": {
            "type": "object",
            "description": "Person household",
            "properties": {
              "id": {
                "readOnly": false,
                "type": "integer",
                "format": "int32",
                "description": "Specify the household id to add the person into that household or change the person's household to a different one."
              },
              "name": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "head_person_id": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "readOnly": true,
                "description": "The person id of the household head."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact id."
              },
              "modified": {
                "description": "The date when this record was last modified."
              }
            }
          },
          "is_household_head": {
            "type": "boolean",
            "writeOnly": true,
            "description": "If set to true, it will make this person the head of household."
          },
          "address": {
            "type": "object",
            "description": "Person default address",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "address1": {
                "nullable": true,
                "maxLength": 300,
                "type": "string"
              },
              "address2": {
                "nullable": true,
                "maxLength": 300,
                "type": "string"
              },
              "city": {
                "nullable": true,
                "maxLength": 100,
                "type": "string"
              },
              "zip": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "default": {
                "default": false,
                "type": "boolean"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "latitude": {
                "nullable": true,
                "maxLength": "10,6",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "longitude": {
                "nullable": true,
                "maxLength": "10,6",
                "type": "number",
                "format": "double",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact address id."
              },
              "state_code": {
                "type": "string",
                "maxLength": 2,
                "description": "A two-letter state value",
                "example": "FL"
              },
              "country_code": {
                "type": "string",
                "maxLength": 2,
                "description": "A two-letter country value",
                "example": "US"
              },
              "label": {
                "type": "string",
                "example": "Home Address"
              }
            }
          },
          "phone": {
            "type": "object",
            "description": "Person default phone",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "number": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "default": {
                "default": false,
                "type": "boolean"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "is_outside_us": {
                "nullable": true,
                "type": "boolean",
                "default": false
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual contact method id."
              },
              "label": {
                "type": "string",
                "example": "Cell"
              }
            }
          },
          "photo": {
            "type": "object",
            "readOnly": true,
            "description": "Person default photo",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "path": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              }
            }
          },
          "user": {
            "type": "object",
            "readOnly": true,
            "description": "Person user, if any",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "active": {
                "default": true,
                "type": "boolean"
              },
              "verified": {
                "default": true,
                "type": "boolean"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "api_id": {
                "nullable": true,
                "maxLength": 100,
                "type": "string",
                "readOnly": true,
                "description": "The API ID to use for API authentication."
              }
            }
          }
        }
      },
      "PersonAddress": {
        "description": "CRM record address.",
        "required": [
          "address1",
          "city",
          "zip",
          "state_code",
          "country_code"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "nullable": true,
            "maxLength": 300,
            "type": "string"
          },
          "address2": {
            "nullable": true,
            "maxLength": 300,
            "type": "string"
          },
          "city": {
            "nullable": true,
            "maxLength": 100,
            "type": "string"
          },
          "zip": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "default": {
            "default": false,
            "type": "boolean"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was created.",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was last modified.",
            "readOnly": true
          },
          "latitude": {
            "nullable": true,
            "maxLength": "10,6",
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "longitude": {
            "nullable": true,
            "maxLength": "10,6",
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "An external system id."
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact address id."
          },
          "state_code": {
            "type": "string",
            "maxLength": 2,
            "description": "A two-letter state value",
            "example": "FL"
          },
          "country_code": {
            "type": "string",
            "maxLength": 2,
            "description": "A two-letter country value",
            "example": "US"
          },
          "label": {
            "type": "string",
            "example": "Home Address"
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          }
        }
      },
      "PersonEmail": {
        "description": "CRM record email.",
        "required": [
          "email"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "default": "",
            "maxLength": 250,
            "type": "string"
          },
          "default": {
            "default": false,
            "type": "boolean"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was created.",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was last modified.",
            "readOnly": true
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact email id."
          },
          "label": {
            "type": "string",
            "example": "Work Email"
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          }
        }
      },
      "PersonFile": {
        "description": "CRM record file.",
        "required": [
          "filename",
          "extension"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "default": "",
            "maxLength": 36,
            "type": "string",
            "readOnly": true
          },
          "label": {
            "default": "",
            "maxLength": 255,
            "type": "string"
          },
          "filename": {
            "default": "",
            "maxLength": 255,
            "type": "string"
          },
          "extension": {
            "default": "",
            "maxLength": 10,
            "type": "string"
          },
          "size": {
            "nullable": true,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "model": {
            "nullable": true,
            "maxLength": 250,
            "type": "string"
          },
          "foreign_key": {
            "nullable": true,
            "type": "integer",
            "format": "int32"
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "readOnly": true
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          },
          "uploader": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          }
        }
      },
      "PersonPhone": {
        "description": "CRM record phone.",
        "required": [
          "number"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "default": "",
            "maxLength": 50,
            "type": "string"
          },
          "default": {
            "default": false,
            "type": "boolean"
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was created.",
            "readOnly": true
          },
          "modified": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was last modified.",
            "readOnly": true
          },
          "is_outside_us": {
            "nullable": true,
            "type": "boolean",
            "default": false
          },
          "virtuous_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Virtuous contact individual contact method id."
          },
          "label": {
            "type": "string",
            "example": "Cell"
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          }
        }
      },
      "PersonRelation": {
        "required": [
          "related_person",
          "type"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "linked_relation_id": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "description": "Can be itself or another relation (e.g. '`Sponsor of`' and '`Sponsored by`')."
          },
          "created": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "example": "2018-04-04T11:39:57+00:00",
            "description": "The date when this record was created.",
            "readOnly": true
          },
          "description": {
            "nullable": true,
            "maxLength": 300,
            "type": "string"
          },
          "person": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr."
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string"
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr."
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ]
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`"
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email"
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string"
              },
              "is_group": {
                "default": false,
                "type": "boolean"
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id."
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id."
              }
            }
          },
          "related_person": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "nullable": true,
                "maxLength": 30,
                "type": "string",
                "example": "Mr.",
                "readOnly": true
              },
              "firstname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "readOnly": true
              },
              "middlename": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "lastname": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "readOnly": true
              },
              "suffix": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "example": "Jr.",
                "readOnly": true
              },
              "gender": {
                "nullable": true,
                "maxLength": 10,
                "type": "string",
                "enum": [
                  "m",
                  "f"
                ],
                "readOnly": true
              },
              "birthday": {
                "nullable": true,
                "type": "string",
                "format": "date",
                "description": "In the format `Y-m-d`",
                "readOnly": true
              },
              "email": {
                "default": "",
                "maxLength": 250,
                "type": "string",
                "format": "email",
                "readOnly": true
              },
              "created": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was created.",
                "readOnly": true
              },
              "modified": {
                "nullable": true,
                "type": "string",
                "format": "date-time",
                "example": "2018-04-04T11:39:57+00:00",
                "description": "The date when this record was last modified.",
                "readOnly": true
              },
              "description": {
                "default": "",
                "maxLength": 500,
                "type": "string",
                "readOnly": true
              },
              "is_group": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              },
              "fullname": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                "readOnly": true
              },
              "external_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "An external system id.",
                "readOnly": true
              },
              "virtuous_id": {
                "nullable": true,
                "maxLength": 50,
                "type": "string",
                "description": "Virtuous contact individual id.",
                "readOnly": true
              }
            }
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "linked_relation_type_id": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "label": {
                "default": "",
                "maxLength": 100,
                "type": "string",
                "example": "Donor",
                "readOnly": true
              },
              "alias": {
                "default": "",
                "maxLength": 50,
                "type": "string",
                "pattern": "/^([a-z]+_?[a-z]+){2,}$/",
                "example": "donor",
                "description": "Must be unique",
                "readOnly": true
              },
              "is_membership": {
                "default": false,
                "type": "boolean",
                "readOnly": true
              }
            }
          }
        }
      },
      "PersonType": {
        "description": "CRM record person type (e.g. '`Donor`', '`Sponsor`')",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "default": "",
            "maxLength": 100,
            "type": "string",
            "example": "Donor"
          }
        }
      },
      "Tag": {
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "nullable": true,
            "maxLength": 200,
            "type": "string"
          },
          "external_id": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Internal only."
          },
          "external_type": {
            "nullable": true,
            "maxLength": 50,
            "type": "string",
            "description": "Internal only."
          },
          "category": {
            "readOnly": true,
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "nullable": true,
                "maxLength": 50,
                "type": "string"
              },
              "in_content_preferences": {
                "default": false,
                "type": "boolean"
              },
              "order": {
                "default": "0",
                "type": "integer",
                "format": "int32",
                "readOnly": true,
                "description": "Internal only."
              },
              "weight": {
                "default": "0",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "TagCategory": {
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "nullable": true,
            "maxLength": 50,
            "type": "string"
          },
          "in_content_preferences": {
            "default": false,
            "type": "boolean"
          },
          "order": {
            "default": "0",
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "description": "Internal only."
          },
          "weight": {
            "default": "0",
            "type": "integer",
            "format": "int32"
          },
          "site": {
            "readOnly": true,
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "default": "",
                "maxLength": 100,
                "type": "string"
              },
              "require_authentication": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorWithErrors": {
        "required": [
          "message",
          "errors"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "EntityConferenceRegistrarion": {
        "description": "Conference Registrarion",
        "required": [
          "first_name",
          "*first_name",
          "last_name",
          "*last_name",
          "email",
          "*email",
          "phone",
          "*phone",
          "organization",
          "*organization",
          "positiontitle",
          "*positiontitle",
          "registering",
          "*registering"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "first_name": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "First Name"
          },
          "last_name": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Last Name"
          },
          "email": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Email"
          },
          "phone": {
            "nullable": true,
            "type": "integer",
            "format": "int32",
            "description": "Phone"
          },
          "organization": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Organization"
          },
          "positiontitle": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Position/Title"
          },
          "registering": {
            "type": "object",
            "properties": {
              "option": {
                "nullable": true,
                "default": false,
                "type": "boolean"
              },
              "explanation": {
                "nullable": true,
                "type": "string"
              }
            },
            "description": "Are you registering anyone else?"
          }
        }
      },
      "EntityCustomerSatisfactionSurvey": {
        "description": "Customer Satisfaction Survey",
        "required": [],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "wa_the_issue_handled_in_intercom_or_interval": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "selection": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "description": "Selection"
              }
            },
            "description": "Was the issue handled in Intercom or Intervals? (readOnly)",
            "readOnly": true
          },
          "*wa_the_issue_handled_in_intercom_or_interval": {
            "type": "integer",
            "description": "Was the issue handled in Intercom or Intervals? (writeOnly - remove the *)",
            "format": "int32",
            "writeOnly": true
          },
          "interval_ticket_number": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Intervals Ticket Number"
          },
          "describe_the_issue_in_510_word": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Describe the issue in 5-10 words"
          },
          "who_responded_to_your_request": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Who responded to your request?"
          },
          "satisfied_customer_provided_feature_request": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "selection": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "description": "Selection"
              },
              "order": {
                "nullable": true,
                "type": "integer",
                "format": "int32",
                "description": "Order"
              }
            },
            "description": "How satisfied are you with the customer service WMTEK provided in regards to this feature request or bug fix? (readOnly)",
            "readOnly": true
          },
          "*satisfied_customer_provided_feature_request": {
            "type": "integer",
            "description": "How satisfied are you with the customer service WMTEK provided in regards to this feature request or bug fix? (writeOnly - remove the *)",
            "format": "int32",
            "writeOnly": true
          },
          "additional_comment": {
            "nullable": true,
            "type": "string",
            "description": "Additional Comments"
          }
        }
      },
      "EntityJobInfo": {
        "description": "Job Info",
        "required": [
          "organization_name",
          "*organization_name",
          "job_title",
          "*job_title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "phone_number": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Phone Number"
          },
          "organization_name": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Organization Name"
          },
          "job_title": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Job Title"
          },
          "potential_project_budget": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Potential Project Budget"
          },
          "estimated_project_deadline": {
            "nullable": true,
            "type": "string",
            "format": "date",
            "description": "Estimated Project Deadline"
          }
        }
      },
      "EntityJobInformation": {
        "description": "Job Information",
        "required": [
          "which_job_opportunity_are_you_interested_in",
          "*which_job_opportunity_are_you_interested_in",
          "why_are_you_interested_in_wmtek",
          "*why_are_you_interested_in_wmtek"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "which_job_opportunity_are_you_interested_in": {
            "nullable": true,
            "type": "string",
            "description": "Which job opportunity are you interested in?"
          },
          "why_are_you_interested_in_wmtek": {
            "nullable": true,
            "type": "string",
            "description": "Why are you interested in WMTek?"
          }
        }
      },
      "EntityMyWmtek": {
        "description": "My WMTEK",
        "required": [
          "select_your_webinar",
          "*select_your_webinar"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "organization": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "Organization"
          },
          "select_your_webinar": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "name": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "description": "Name"
              }
            },
            "description": "Select your Webinar (readOnly)",
            "readOnly": true
          },
          "*select_your_webinar": {
            "type": "integer",
            "description": "Select your Webinar (writeOnly - remove the *)",
            "format": "int32",
            "writeOnly": true
          },
          "what_would_you_like_to_do_next": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "name": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "description": "Name"
              }
            },
            "description": "What would you like to do next (readOnly)",
            "readOnly": true
          },
          "*what_would_you_like_to_do_next": {
            "type": "integer",
            "description": "What would you like to do next (writeOnly - remove the *)",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EntityTellUAboutYourProject": {
        "description": "Tell Us About Your Project",
        "required": [
          "what_organization_do_you_represent",
          "*what_organization_do_you_represent",
          "what_i_your_website",
          "*what_i_your_website"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "what_organization_do_you_represent": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "What Organization Do You Represent"
          },
          "what_i_your_website": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": "What is your website?"
          },
          "how_can_we_help": {
            "type": "array",
            "items": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            },
            "description": "How can we help?"
          },
          "please_estimate_the_financial_resource": {
            "nullable": true,
            "maxLength": 300,
            "type": "string",
            "description": " Please estimate the financial resources you intend to invest in this project or relationship over the next twelve months:"
          },
          "thi_project_involf": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "test": {
                "nullable": true,
                "maxLength": 300,
                "type": "string",
                "description": "test"
              }
            },
            "description": "This Project Involves (readOnly)",
            "readOnly": true
          },
          "*thi_project_involf": {
            "type": "integer",
            "description": "This Project Involves (writeOnly - remove the *)",
            "format": "int32",
            "writeOnly": true
          }
        }
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "How many records to retrieve (max 50)",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50
        },
        "example": 3
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Start with the n-th record",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 0
      },
      "order": {
        "name": "order",
        "in": "query",
        "description": "The column to order by",
        "schema": {
          "type": "string",
          "default": "id"
        },
        "example": "id"
      },
      "dir": {
        "name": "dir",
        "in": "query",
        "description": "The order direction",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "example": "asc"
      },
      "type": {
        "name": "type",
        "in": "path",
        "description": "The type alias. This can be found in `Architect`.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "Article",
            "ArticleWmtek",
            "ContactIteenChallenge",
            "CustomContent",
            "Endorsement",
            "Form",
            "ImpactArea",
            "Logo",
            "Project",
            "Resource",
            "Static",
            "Story",
            "Testimonial",
            "Testimony",
            "TextBlock",
            "Video"
          ]
        },
        "example": "Article"
      },
      "personType": {
        "name": "type",
        "in": "path",
        "description": "The person type name. This can be found in `CRM > Configuration > Record Types (tab)`.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "Donor",
            "Organization",
            "Prospect",
            "Registrant"
          ]
        },
        "example": "Donor"
      },
      "language": {
        "name": "language",
        "in": "path",
        "description": "The language abbreviation. This can be found in `Languages`.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "en"
      },
      "version": {
        "name": "version",
        "in": "path",
        "description": "The item version. Possible values: `live`, `last`, or a version number (e.g. `1`).",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "live",
            "last",
            "1"
          ]
        },
        "example": "live"
      },
      "person": {
        "name": "person",
        "in": "path",
        "description": "The person id.",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        },
        "example": "1"
      },
      "entity": {
        "name": "entity",
        "in": "path",
        "description": "The entity alias.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ConferenceRegistrarion",
            "CustomerSatisfactionSurvey",
            "JobInfo",
            "JobInformation",
            "MyWmtek",
            "TellUAboutYourProject"
          ]
        },
        "example": "ConferenceRegistrarion"
      },
      "tag": {
        "name": "tag",
        "in": "path",
        "description": "The tag name.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sitestackerSignature": {
        "name": "SiteStacker-Signature",
        "in": "header",
        "description": "HMAC hex digest of the payload, using the hook’s secret as the key (if configured).",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "sha1=71b6cf4b942ae5dab00a7b372991b941d827ae2c"
      },
      "sitestackerDelivery": {
        "name": "SiteStacker-Delivery",
        "in": "header",
        "description": "Unique ID for this delivery.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "5abe1d0a-c208-4c94-94d7-5598cc79e281"
      },
      "userAgent": {
        "name": "User-Agent",
        "in": "header",
        "description": "The `User-Agent` is always `SiteStacker`.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "SiteStacker"
          ]
        },
        "example": "SiteStacker"
      },
      "contentType": {
        "name": "Content-Type",
        "in": "header",
        "description": "The `Content-Type` is always `application/json`.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        },
        "example": "application/json"
      },
      "contentLength": {
        "name": "Content-Length",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "676"
      },
      "requestId": {
        "name": "Request-Id",
        "in": "header",
        "description": "This can be used to prevent request cycle loops.",
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "Accept-Ranges": {
        "description": "A comma-separated list with all possible columns for ordering. E.g. `id, name`",
        "schema": {
          "type": "string"
        }
      },
      "Content-Range": {
        "description": "Specifies the order, range, limit and total number of items. E.g. `id 0..; max=3, total=4, order=asc`",
        "schema": {
          "type": "string"
        }
      },
      "Next-Range": {
        "description": "Specifies the next range (similar to Content-Range). E.g. `id 3..4; max=3, order=asc`",
        "schema": {
          "type": "string"
        }
      },
      "RateLimit-Limit": {
        "description": "Request limit per hour. This header is present in all requests.",
        "schema": {
          "type": "integer"
        }
      },
      "RateLimit-Remaining": {
        "description": "The number of requests left for the time window. This header is present in all requests.",
        "schema": {
          "type": "integer"
        }
      },
      "RateLimit-Reset": {
        "description": "The server date/time at which the current rate limit window resets. This header is present in all requests.",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2018-04-04T11:39:57+00:00"
        }
      }
    },
    "responses": {
      "206": {
        "description": "Partial Content. Returned if there are other items left (considering pagination). Use Next-Range to get next list of items. The content is the same as 200 OK.",
        "headers": {
          "Accept-Ranges": {
            "$ref": "#/components/headers/Accept-Ranges"
          },
          "Content-Range": {
            "$ref": "#/components/headers/Content-Range"
          },
          "Next-Range": {
            "$ref": "#/components/headers/Next-Range"
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/ErrorWithErrors"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "403": {
        "description": "RequestTimeTooSkewed. This happens when the difference between the request date and the current date is too large. See [http://docs.sitestacker.com/articles/api-authentication#time-stamp-requirement](http://docs.sitestacker.com/articles/api-authentication#time-stamp-requirement).",
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests",
        "headers": {
          "RateLimit-Limit": {
            "$ref": "#/components/headers/RateLimit-Limit"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/RateLimit-Remaining"
          },
          "RateLimit-Reset": {
            "$ref": "#/components/headers/RateLimit-Reset"
          }
        },
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "5xx": {
        "description": "Unexpected error",
        "content": {
          "application/json:": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "2xx_webhook": {
        "description": "To acknowledge receipt of a webhook, your endpoint should return a 2xx HTTP status code."
      },
      "5xx_webhook": {
        "description": "Any 5xx HTTP status code indicates to Site Stacker that you did not receive the webhook, so it will retry sending it 10 times every minute."
      }
    }
  },
  "paths": {
    "/activities/types": {
      "get": {
        "tags": [
          "Activity"
        ],
        "operationId": "listactivitytypes",
        "summary": "List all configured activity types, in CRM - Configuration.",
        "description": "Returns an array with all configured activity types.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "alias": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "pattern": "/^(?![0-9]*$)[a-zA-Z0-9]+$/i",
                        "unique": true,
                        "description": "Alias has to start with the first letter uppercase and singular (e.g. Article)."
                      },
                      "name": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "is_editable": {
                        "default": true,
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/activities": {
      "post": {
        "tags": [
          "Activity"
        ],
        "operationId": "createactivity",
        "summary": "Create an activity",
        "requestBody": {
          "description": "Json-encoded activity object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "people"
                ],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "external_id": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "is_system": {
                    "default": false,
                    "type": "boolean"
                  },
                  "subject": {
                    "nullable": true,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "body": {
                    "nullable": true,
                    "type": "string"
                  },
                  "notes": {
                    "nullable": true,
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Specify the activity type id to add this activity. **This is required for CREATE**"
                      },
                      "alias": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "pattern": "/^(?![0-9]*$)[a-zA-Z0-9]+$/i",
                        "unique": true,
                        "description": "Alias has to start with the first letter uppercase and singular (e.g. Article).",
                        "readOnly": true
                      },
                      "name": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_editable": {
                        "default": true,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    },
                    "description": "**Type id is required for every create.**"
                  },
                  "person": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "The owner of this activity (optional)"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f",
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      }
                    },
                    "description": "The person who created this activity (optional)"
                  },
                  "people": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": false,
                          "type": "integer",
                          "format": "int32",
                          "description": "Specify a person id involved in this activity."
                        },
                        "title": {
                          "nullable": true,
                          "maxLength": 30,
                          "type": "string",
                          "example": "Mr.",
                          "readOnly": true
                        },
                        "firstname": {
                          "default": "",
                          "maxLength": 100,
                          "type": "string",
                          "readOnly": true
                        },
                        "middlename": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "readOnly": true
                        },
                        "lastname": {
                          "default": "",
                          "maxLength": 50,
                          "type": "string",
                          "readOnly": true
                        },
                        "suffix": {
                          "nullable": true,
                          "maxLength": 10,
                          "type": "string",
                          "example": "Jr.",
                          "readOnly": true
                        },
                        "gender": {
                          "nullable": true,
                          "maxLength": 10,
                          "type": "string",
                          "enum": [
                            "m",
                            "f",
                            "m",
                            "f"
                          ],
                          "readOnly": true
                        },
                        "birthday": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "In the format `Y-m-d`",
                          "readOnly": true
                        },
                        "email": {
                          "default": "",
                          "maxLength": 250,
                          "type": "string",
                          "format": "email",
                          "readOnly": true
                        },
                        "created": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date when this record was created.",
                          "readOnly": true
                        },
                        "modified": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date when this record was last modified.",
                          "readOnly": true
                        },
                        "description": {
                          "default": "",
                          "maxLength": 500,
                          "type": "string",
                          "readOnly": true
                        },
                        "is_group": {
                          "default": false,
                          "type": "boolean",
                          "readOnly": true
                        },
                        "fullname": {
                          "default": "",
                          "maxLength": 100,
                          "type": "string",
                          "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                          "readOnly": true
                        },
                        "external_id": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "description": "An external system id.",
                          "readOnly": true
                        },
                        "virtuous_id": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "description": "Virtuous contact individual id.",
                          "readOnly": true
                        }
                      },
                      "description": "Specify all person ids that are involved in this activity."
                    },
                    "description": "All the people involved in this activity (to whom this activity belongs to)"
                  },
                  "data": {
                    "type": "object",
                    "description": "Dynamic object containing custom fields configured for this activity type in CRM - Configuration. Null if custom data doesn't exist."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/activities/people/{person}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "operationId": "listactivitiesforperson",
        "summary": "List all activities for a person.",
        "description": "Returns an array with all activities for a given person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "operationId": "deleteactivitiesforperson",
        "summary": "Delete all activities for a person",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. Activities was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/activities/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The activity id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Activity"
        ],
        "operationId": "getactivity",
        "summary": "Get an activity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Activity"
        ],
        "operationId": "updateactivity",
        "summary": "Update an activity",
        "requestBody": {
          "description": "Json-encoded activity object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "external_id": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "is_system": {
                    "default": false,
                    "type": "boolean"
                  },
                  "subject": {
                    "nullable": true,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "body": {
                    "nullable": true,
                    "type": "string"
                  },
                  "notes": {
                    "nullable": true,
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "alias": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "pattern": "/^(?![0-9]*$)[a-zA-Z0-9]+$/i",
                        "unique": true,
                        "description": "Alias has to start with the first letter uppercase and singular (e.g. Article)."
                      },
                      "name": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "is_editable": {
                        "default": true,
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      }
                    },
                    "description": "The activity type",
                    "readOnly": true
                  },
                  "person": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr."
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr."
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean"
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id."
                      }
                    },
                    "description": "The person who created this activity (optional)",
                    "readOnly": true
                  },
                  "people": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": false,
                          "type": "integer",
                          "format": "int32",
                          "description": "Specify a person id involved in this activity."
                        },
                        "title": {
                          "nullable": true,
                          "maxLength": 30,
                          "type": "string",
                          "example": "Mr.",
                          "readOnly": true
                        },
                        "firstname": {
                          "default": "",
                          "maxLength": 100,
                          "type": "string",
                          "readOnly": true
                        },
                        "middlename": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "readOnly": true
                        },
                        "lastname": {
                          "default": "",
                          "maxLength": 50,
                          "type": "string",
                          "readOnly": true
                        },
                        "suffix": {
                          "nullable": true,
                          "maxLength": 10,
                          "type": "string",
                          "example": "Jr.",
                          "readOnly": true
                        },
                        "gender": {
                          "nullable": true,
                          "maxLength": 10,
                          "type": "string",
                          "enum": [
                            "m",
                            "f",
                            "m",
                            "f"
                          ],
                          "readOnly": true
                        },
                        "birthday": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "In the format `Y-m-d`",
                          "readOnly": true
                        },
                        "email": {
                          "default": "",
                          "maxLength": 250,
                          "type": "string",
                          "format": "email",
                          "readOnly": true
                        },
                        "created": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date when this record was created.",
                          "readOnly": true
                        },
                        "modified": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-04T11:39:57+00:00",
                          "description": "The date when this record was last modified.",
                          "readOnly": true
                        },
                        "description": {
                          "default": "",
                          "maxLength": 500,
                          "type": "string",
                          "readOnly": true
                        },
                        "is_group": {
                          "default": false,
                          "type": "boolean",
                          "readOnly": true
                        },
                        "fullname": {
                          "default": "",
                          "maxLength": 100,
                          "type": "string",
                          "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                          "readOnly": true
                        },
                        "external_id": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "description": "An external system id.",
                          "readOnly": true
                        },
                        "virtuous_id": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string",
                          "description": "Virtuous contact individual id.",
                          "readOnly": true
                        }
                      },
                      "description": "Specify all person ids that are involved in this activity."
                    },
                    "description": "All the people involved in this activity (to whom this activity belongs to)"
                  },
                  "data": {
                    "type": "object",
                    "description": "Dynamic object containing custom fields configured for this activity type in CRM - Configuration. Null if custom data doesn't exist."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "operationId": "deleteactivity",
        "summary": "Delete an activity",
        "responses": {
          "204": {
            "description": "No Content. Activity was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/campaigns": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "operationId": "listcampaigns",
        "summary": "List all campaigns",
        "description": "Returns an array of campaigns.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `goal_amount`, `min_amount`, `max_amount`, `start`, `end`, `external_id`, `virtuous_id`, `accounting_code`, `inventory_status`, `image`, `show_extra_field`, `extra_field_label`, `extra_field_is_required`, `allow_multiple_in_cart`, `is_disabled`, `created`, `modified`, `item.id`, `item.alias`, `item.name`, `item.views`, `item.publish_datetime`, `item.unpublish_datetime`, `item.visibility`, `item.is_searchable`, `item.external_id`, `item.created`, `item.modified`, `category.id`, `category.name`, `category.campaign_label`, `category.external_id`, `category.use_fixed_recurring_amounts`, `category.force_recurring`, `category.cart_expiration`, `category.created`, `category.modified`, `site.id`, `site.name`, `site.require_authentication`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/campaigns/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The campaign id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Campaign"
        ],
        "operationId": "getcampaign",
        "summary": "Get a campaign",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "operationId": "updatecampaign",
        "summary": "Update a campaign",
        "requestBody": {
          "description": "Json-encoded campaign object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/contribution-batches": {
      "get": {
        "tags": [
          "ContributionBatch"
        ],
        "operationId": "listcontributionbatches",
        "summary": "List all contribution batches",
        "description": "Returns an array of contribution batches.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `amount`, `transaction_fee`, `is_recurring`, `is_online`, `external_id`, `virtuous_id`, `success`, `pending`, `currency`, `source_codes`, `ip_address`, `tribute_type`, `tribute_name`, `transaction_code`, `is_testing`, `is_refund`, `refund_contribution_batch_id`, `offline_type`, `offline_check_number`, `received`, `processed`, `created`, `modified`, `site_channel.id`, `site_channel.name`, `site_channel.title`, `site_channel.status`, `site_channel.date_format`, `site_channel.time_format`, `site_channel.timezone`, `site_channel.force_primary_domain`, `site_channel.is_mobile`, `site_channel.session_timeout`, `site_channel.session_timeout_browser_close`, `site_channel.captcha_after_logins`, `site_channel.permission_access`, `site_channel.robots`, `site_channel.is_offline`, `site_channel.offline_message`, `site_channel.force_https`, `site_channel.template_theme`, `payment_method.id`, `payment_method.archived`, `payment_method.deleted`, `payment_method.test_mode`, `payment_method.last_four`, `payment_method.expiration_date`, `payment_method.gateway`, `payment_method.currency`, `payment_method.external_id`, `payment_method.person_profile_code_override`, `payment_method.created`, `payment_method.modified`, `donor.id`, `donor.title`, `donor.firstname`, `donor.middlename`, `donor.lastname`, `donor.fullname`, `donor.suffix`, `donor.gender`, `donor.birthday`, `donor.email`, `donor.description`, `donor.is_group`, `donor.external_id`, `donor.virtuous_id`, `donor.created`, `donor.modified`, `affiliated_donor.id`, `affiliated_donor.title`, `affiliated_donor.firstname`, `affiliated_donor.middlename`, `affiliated_donor.lastname`, `affiliated_donor.fullname`, `affiliated_donor.suffix`, `affiliated_donor.gender`, `affiliated_donor.birthday`, `affiliated_donor.email`, `affiliated_donor.description`, `affiliated_donor.is_group`, `affiliated_donor.external_id`, `affiliated_donor.virtuous_id`, `affiliated_donor.created`, `affiliated_donor.modified`, `recurring.id`, `recurring.active`, `recurring.archived`, `recurring.recurring_start_date`, `recurring.recurring_end_date`, `recurring.recurring_period`, `recurring.recurring_interval`, `recurring.recurring_day_of_month`, `recurring.prev_run_date`, `recurring.next_run_date`, `recurring.external_id`, `recurring.currency`, `recurring.source_codes`, `recurring.processed_counter`, `recurring.created`, `recurring.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContributionBatch"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "ContributionBatch"
        ],
        "operationId": "createcontributionbatch",
        "summary": "Create a contribution batch",
        "requestBody": {
          "description": "Json-encoded contribution batch object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContributionBatch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributionBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/contribution-batches/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The contribution batch id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "ContributionBatch"
        ],
        "operationId": "getcontributionbatch",
        "summary": "Get a contribution batch",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributionBatch"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "ContributionBatch"
        ],
        "operationId": "updatecontributionbatch",
        "summary": "Update a contribution batch",
        "requestBody": {
          "description": "Json-encoded contribution batch object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContributionBatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributionBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/historic-gifts": {
      "get": {
        "tags": [
          "HistoricGift"
        ],
        "operationId": "listhistoricgifts",
        "summary": "List all historic gifts",
        "description": "Returns an array of historic gifts.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `is_anonymous`, `is_native`, `is_imported`, `donor_type`, `donor_person_external_id`, `donor_person_virtuous_id`, `affiliated_person_external_id`, `donor_household_external_id`, `donor_household_virtuous_id`, `amount`, `deductible_amount`, `non_deductible_amount`, `currency`, `received`, `contribution_type`, `payment_method_type`, `record_type`, `fund_id`, `fund_name`, `notes`, `offline_type`, `offline_check_number`, `source_codes`, `last_four`, `expiration_date`, `firstname`, `affiliated_person_firstname`, `lastname`, `affiliated_person_lastname`, `fullname`, `affiliated_person_fullname`, `email`, `affiliated_person_email`, `phone`, `latitude`, `longitude`, `address1`, `address2`, `city`, `zip`, `state`, `country`, `virtuous_id`, `campaign_external_id`, `created`, `modified`, `receiver.id`, `receiver.title`, `receiver.firstname`, `receiver.middlename`, `receiver.lastname`, `receiver.fullname`, `receiver.suffix`, `receiver.gender`, `receiver.birthday`, `receiver.email`, `receiver.description`, `receiver.is_group`, `receiver.external_id`, `receiver.virtuous_id`, `receiver.created`, `receiver.modified`, `donor.id`, `donor.title`, `donor.firstname`, `donor.middlename`, `donor.lastname`, `donor.fullname`, `donor.suffix`, `donor.gender`, `donor.birthday`, `donor.email`, `donor.description`, `donor.is_group`, `donor.external_id`, `donor.virtuous_id`, `donor.created`, `donor.modified`, `affiliated_donor.id`, `affiliated_donor.title`, `affiliated_donor.firstname`, `affiliated_donor.middlename`, `affiliated_donor.lastname`, `affiliated_donor.fullname`, `affiliated_donor.suffix`, `affiliated_donor.gender`, `affiliated_donor.birthday`, `affiliated_donor.email`, `affiliated_donor.description`, `affiliated_donor.is_group`, `affiliated_donor.external_id`, `affiliated_donor.virtuous_id`, `affiliated_donor.created`, `affiliated_donor.modified`, `contribution.id`, `contribution.amount`, `contribution.is_recurring`, `contribution.is_online`, `contribution.is_anonymous`, `contribution.paid_transaction_fee`, `contribution.transaction_fee`, `contribution.error`, `contribution.notes`, `contribution.success`, `contribution.external_id`, `contribution.extra_data`, `contribution.source_codes`, `contribution.pending`, `contribution.created`, `contribution.modified`, `campaign.id`, `campaign.goal_amount`, `campaign.min_amount`, `campaign.max_amount`, `campaign.start`, `campaign.end`, `campaign.external_id`, `campaign.virtuous_id`, `campaign.accounting_code`, `campaign.inventory_status`, `campaign.image`, `campaign.show_extra_field`, `campaign.extra_field_label`, `campaign.extra_field_is_required`, `campaign.allow_multiple_in_cart`, `campaign.is_disabled`, `campaign.created`, `campaign.modified`, `site.id`, `site.name`, `site.require_authentication`, `site_channel.id`, `site_channel.name`, `site_channel.title`, `site_channel.status`, `site_channel.date_format`, `site_channel.time_format`, `site_channel.timezone`, `site_channel.force_primary_domain`, `site_channel.is_mobile`, `site_channel.session_timeout`, `site_channel.session_timeout_browser_close`, `site_channel.captcha_after_logins`, `site_channel.permission_access`, `site_channel.robots`, `site_channel.is_offline`, `site_channel.offline_message`, `site_channel.force_https`, `site_channel.template_theme`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoricGift"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "HistoricGift"
        ],
        "operationId": "createhistoricgift",
        "summary": "Create a historic gift",
        "requestBody": {
          "description": "Json-encoded historic gift object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoricGift"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricGift"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/historic-gifts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The historic gift id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "HistoricGift"
        ],
        "operationId": "gethistoricgift",
        "summary": "Get a historic gift",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricGift"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "HistoricGift"
        ],
        "operationId": "updatehistoricgift",
        "summary": "Update a historic gift",
        "requestBody": {
          "description": "Json-encoded historic gift object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoricGift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricGift"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "HistoricGift"
        ],
        "operationId": "deletehistoricgift",
        "summary": "Delete a historic gift",
        "responses": {
          "204": {
            "description": "No Content. Historic gift was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/types/{type}/languages/{language}/versions/{version}/items": {
      "get": {
        "tags": [
          "Item"
        ],
        "operationId": "listitems",
        "summary": "List items",
        "description": "Returns an array of items, including the custom data for the specified language and version.",
        "parameters": [
          {
            "$ref": "#/components/parameters/type"
          },
          {
            "$ref": "#/components/parameters/language"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `alias`, `name`, `views`, `publish_datetime`, `unpublish_datetime`, `visibility`, `is_searchable`, `external_id`, `created`, `modified`, `folder.id`, `folder.name`, `folder.external_id`, `campaign.id`, `campaign.goal_amount`, `campaign.min_amount`, `campaign.max_amount`, `campaign.start`, `campaign.end`, `campaign.external_id`, `campaign.virtuous_id`, `campaign.accounting_code`, `campaign.inventory_status`, `campaign.image`, `campaign.show_extra_field`, `campaign.extra_field_label`, `campaign.extra_field_is_required`, `campaign.allow_multiple_in_cart`, `campaign.is_disabled`, `campaign.created`, `campaign.modified`, `owner.id`, `owner.title`, `owner.firstname`, `owner.middlename`, `owner.lastname`, `owner.fullname`, `owner.suffix`, `owner.gender`, `owner.birthday`, `owner.email`, `owner.description`, `owner.is_group`, `owner.external_id`, `owner.virtuous_id`, `owner.created`, `owner.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "Item"
        ],
        "operationId": "createitem",
        "summary": "Create an item",
        "description": "Save a new item.",
        "parameters": [
          {
            "$ref": "#/components/parameters/type"
          },
          {
            "$ref": "#/components/parameters/language"
          },
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "requestBody": {
          "description": "Json-encoded item object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Content item.",
                "required": [
                  "name",
                  "folder"
                ],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "views": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The number of views for this item."
                  },
                  "publish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes available for publishing."
                  },
                  "unpublish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes unavailable for publishing."
                  },
                  "visibility": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only."
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "is_searchable": {
                    "default": true,
                    "type": "boolean",
                    "description": "Controls if this item is searchable or not, on the site."
                  },
                  "alias": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "pattern": "/^[A-Za-z0-9_-]+$/",
                    "description": "Created automatically from `name`, if not given."
                  },
                  "folder": {
                    "type": "object",
                    "description": "The content folder that contains the item",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string",
                        "description": "Content folder name. This name appears in `Site Planner > Content Explorer`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "abbreviation": {
                        "default": "",
                        "maxLength": 5,
                        "type": "string",
                        "description": "Language abbreviation, e.g. `en`, `en-uk`. Must be unique.",
                        "pattern": "/[a-z]{2}(-[a-zA-Z]{2})?/"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 20,
                        "type": "string",
                        "description": "Language name, e.g. `English`, `English (United Kingdom)`."
                      }
                    }
                  },
                  "campaign": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "goal_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "min_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "max_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "start": {
                        "nullable": true,
                        "type": "string",
                        "format": "date"
                      },
                      "end": {
                        "nullable": true,
                        "type": "string",
                        "format": "date"
                      },
                      "image": {
                        "nullable": true,
                        "maxLength": 500,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "show_extra_field": {
                        "default": false,
                        "type": "boolean"
                      },
                      "extra_field_label": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "extra_field_is_required": {
                        "default": false,
                        "type": "boolean"
                      },
                      "allow_multiple_in_cart": {
                        "default": false,
                        "type": "boolean"
                      },
                      "is_disabled": {
                        "default": false,
                        "type": "boolean"
                      },
                      "accounting_code": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "inventory_status": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous project id."
                      }
                    }
                  },
                  "stage": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Item workflow stage. You can see this in `Workflows`.",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Workflow stage name, e.g. `Unpublished`, `Published`."
                      },
                      "is_new": {
                        "default": false,
                        "type": "boolean",
                        "description": "If not specified, new items go into this stage."
                      },
                      "is_live": {
                        "default": false,
                        "type": "boolean",
                        "description": "The items in this stage are live (visible on the site)."
                      },
                      "notify": {
                        "default": false,
                        "type": "boolean",
                        "description": "Internal only."
                      },
                      "order": {
                        "default": "0",
                        "type": "integer",
                        "format": "int32",
                        "description": "Internal order number.",
                        "readOnly": true
                      },
                      "color": {
                        "nullable": true,
                        "maxLength": 6,
                        "type": "string",
                        "description": "Internal only."
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Content type, as configured in Architect.",
                    "required": [
                      "alias",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "alias": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "pattern": "/[a-zA-Z]+/",
                        "description": "The content type alias. Should be `CamelCase`, without any spaces. Must be unique."
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "The content type name."
                      }
                    }
                  },
                  "owner": {
                    "type": "object",
                    "description": "The person that is the owner of this item, if any.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "type": "object",
                        "description": "Person default email",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "email": {
                            "default": "",
                            "maxLength": 250,
                            "type": "string"
                          },
                          "default": {
                            "readOnly": true
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact email id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Work Email"
                          }
                        },
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      },
                      "household": {
                        "type": "object",
                        "description": "Person household",
                        "properties": {
                          "id": {
                            "readOnly": false,
                            "type": "integer",
                            "format": "int32",
                            "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                          },
                          "name": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "head_person_id": {
                            "nullable": true,
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "The person id of the household head."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact id."
                          },
                          "modified": {
                            "description": "The date when this record was last modified."
                          }
                        },
                        "readOnly": true
                      },
                      "is_household_head": {
                        "type": "boolean",
                        "description": "If set to true, it will make this person the head of household.",
                        "readOnly": true
                      },
                      "address": {
                        "type": "object",
                        "description": "Person default address",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "address1": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "address2": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "city": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "zip": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "latitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "longitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact address id."
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter state value",
                            "example": "FL"
                          },
                          "country_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter country value",
                            "example": "US"
                          },
                          "label": {
                            "type": "string",
                            "example": "Home Address"
                          }
                        },
                        "readOnly": true
                      },
                      "phone": {
                        "type": "object",
                        "description": "Person default phone",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "number": {
                            "default": "",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "is_outside_us": {
                            "nullable": true,
                            "type": "boolean",
                            "default": false
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact individual contact method id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Cell"
                          }
                        },
                        "readOnly": true
                      },
                      "photo": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person default photo",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "default": "",
                            "maxLength": 500,
                            "type": "string"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person user, if any",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "active": {
                            "default": true,
                            "type": "boolean"
                          },
                          "verified": {
                            "default": true,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "api_id": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string",
                            "readOnly": true,
                            "description": "The API ID to use for API authentication."
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Item version.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "version_number": {
                        "default": "0",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "readOnly": true
                      },
                      "is_live": {
                        "default": false,
                        "type": "boolean",
                        "description": "This version is live (visible on the site).",
                        "readOnly": true
                      },
                      "is_last": {
                        "default": false,
                        "type": "boolean",
                        "description": "This version is the last version saved for this item.",
                        "readOnly": true
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Array of tag ids to assign to this item. Any previous tags will be overwritten.",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "data": {
                    "type": "object",
                    "description": "An object with all the custom data for the specified language and version, as configured in `Architect` for the content type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/types/{type}/languages/{language}/versions/{version}/items/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/type"
        },
        {
          "$ref": "#/components/parameters/language"
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The item id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Item"
        ],
        "operationId": "getitem",
        "summary": "Get an item",
        "description": "Returns a single item, including the custom data for the specified language and version.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Item"
        ],
        "operationId": "updateitem",
        "summary": "Update an item",
        "description": "Update an existing item.",
        "requestBody": {
          "description": "Json-encoded item object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Content item.",
                "required": [
                  "name",
                  "folder"
                ],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "views": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The number of views for this item."
                  },
                  "publish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes available for publishing."
                  },
                  "unpublish_datetime": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date this item becomes unavailable for publishing."
                  },
                  "visibility": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "What users can view this item. Possible values: `0` = all, `1` = unregistered only, `2` = registered only."
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "readOnly": true
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "is_searchable": {
                    "default": true,
                    "type": "boolean",
                    "description": "Controls if this item is searchable or not, on the site."
                  },
                  "alias": {
                    "nullable": true,
                    "maxLength": 100,
                    "type": "string",
                    "pattern": "/^[A-Za-z0-9_-]+$/",
                    "description": "Created automatically from `name`, if not given."
                  },
                  "folder": {
                    "type": "object",
                    "description": "The content folder that contains the item",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string",
                        "description": "Content folder name. This name appears in `Site Planner > Content Explorer`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "abbreviation": {
                        "default": "",
                        "maxLength": 5,
                        "type": "string",
                        "description": "Language abbreviation, e.g. `en`, `en-uk`. Must be unique.",
                        "pattern": "/[a-z]{2}(-[a-zA-Z]{2})?/"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 20,
                        "type": "string",
                        "description": "Language name, e.g. `English`, `English (United Kingdom)`."
                      }
                    }
                  },
                  "campaign": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "goal_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "min_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "max_amount": {
                        "nullable": true,
                        "maxLength": "10,2",
                        "type": "number",
                        "format": "double"
                      },
                      "start": {
                        "nullable": true,
                        "type": "string",
                        "format": "date"
                      },
                      "end": {
                        "nullable": true,
                        "type": "string",
                        "format": "date"
                      },
                      "image": {
                        "nullable": true,
                        "maxLength": 500,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "show_extra_field": {
                        "default": false,
                        "type": "boolean"
                      },
                      "extra_field_label": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "extra_field_is_required": {
                        "default": false,
                        "type": "boolean"
                      },
                      "allow_multiple_in_cart": {
                        "default": false,
                        "type": "boolean"
                      },
                      "is_disabled": {
                        "default": false,
                        "type": "boolean"
                      },
                      "accounting_code": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "inventory_status": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous project id."
                      }
                    }
                  },
                  "stage": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Item workflow stage. You can see this in `Workflows`.",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Workflow stage name, e.g. `Unpublished`, `Published`."
                      },
                      "is_new": {
                        "default": false,
                        "type": "boolean",
                        "description": "If not specified, new items go into this stage."
                      },
                      "is_live": {
                        "default": false,
                        "type": "boolean",
                        "description": "The items in this stage are live (visible on the site)."
                      },
                      "notify": {
                        "default": false,
                        "type": "boolean",
                        "description": "Internal only."
                      },
                      "order": {
                        "default": "0",
                        "type": "integer",
                        "format": "int32",
                        "description": "Internal order number.",
                        "readOnly": true
                      },
                      "color": {
                        "nullable": true,
                        "maxLength": 6,
                        "type": "string",
                        "description": "Internal only."
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Content type, as configured in Architect.",
                    "required": [
                      "alias",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "alias": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "pattern": "/[a-zA-Z]+/",
                        "description": "The content type alias. Should be `CamelCase`, without any spaces. Must be unique."
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "The content type name."
                      }
                    }
                  },
                  "owner": {
                    "type": "object",
                    "description": "The person that is the owner of this item, if any.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "type": "object",
                        "description": "Person default email",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "email": {
                            "default": "",
                            "maxLength": 250,
                            "type": "string"
                          },
                          "default": {
                            "readOnly": true
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact email id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Work Email"
                          }
                        },
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      },
                      "household": {
                        "type": "object",
                        "description": "Person household",
                        "properties": {
                          "id": {
                            "readOnly": false,
                            "type": "integer",
                            "format": "int32",
                            "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                          },
                          "name": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "head_person_id": {
                            "nullable": true,
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "The person id of the household head."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact id."
                          },
                          "modified": {
                            "description": "The date when this record was last modified."
                          }
                        },
                        "readOnly": true
                      },
                      "is_household_head": {
                        "type": "boolean",
                        "description": "If set to true, it will make this person the head of household.",
                        "readOnly": true
                      },
                      "address": {
                        "type": "object",
                        "description": "Person default address",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "address1": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "address2": {
                            "nullable": true,
                            "maxLength": 300,
                            "type": "string"
                          },
                          "city": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "zip": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "latitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "longitude": {
                            "nullable": true,
                            "maxLength": "10,6",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          },
                          "external_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "An external system id."
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact address id."
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter state value",
                            "example": "FL"
                          },
                          "country_code": {
                            "type": "string",
                            "maxLength": 2,
                            "description": "A two-letter country value",
                            "example": "US"
                          },
                          "label": {
                            "type": "string",
                            "example": "Home Address"
                          }
                        },
                        "readOnly": true
                      },
                      "phone": {
                        "type": "object",
                        "description": "Person default phone",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "number": {
                            "default": "",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "default": {
                            "default": false,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "is_outside_us": {
                            "nullable": true,
                            "type": "boolean",
                            "default": false
                          },
                          "virtuous_id": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string",
                            "description": "Virtuous contact individual contact method id."
                          },
                          "label": {
                            "type": "string",
                            "example": "Cell"
                          }
                        },
                        "readOnly": true
                      },
                      "photo": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person default photo",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "default": "",
                            "maxLength": 500,
                            "type": "string"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Person user, if any",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "active": {
                            "default": true,
                            "type": "boolean"
                          },
                          "verified": {
                            "default": true,
                            "type": "boolean"
                          },
                          "created": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was created.",
                            "readOnly": true
                          },
                          "modified": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-04T11:39:57+00:00",
                            "description": "The date when this record was last modified.",
                            "readOnly": true
                          },
                          "api_id": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string",
                            "readOnly": true,
                            "description": "The API ID to use for API authentication."
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Item version.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "version_number": {
                        "default": "0",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "readOnly": true
                      },
                      "is_live": {
                        "default": false,
                        "type": "boolean",
                        "description": "This version is live (visible on the site).",
                        "readOnly": true
                      },
                      "is_last": {
                        "default": false,
                        "type": "boolean",
                        "description": "This version is the last version saved for this item.",
                        "readOnly": true
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Array of tag ids to assign to this item. Any previous tags will be overwritten.",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "data": {
                    "type": "object",
                    "description": "An object with all the custom data for the specified language and version, as configured in `Architect` for the content type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/types/{type}/items/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/type"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The item id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "delete": {
        "tags": [
          "Item"
        ],
        "operationId": "deleteitem",
        "summary": "Delete an item",
        "description": "Delete an item and all its languages and versions.",
        "responses": {
          "204": {
            "description": "No Content. Item was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/newsletter-lists": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "listnewsletterlists",
        "summary": "List all newsletter lists",
        "description": "Returns an array of newsletter lists.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `name`, `subscribed_person_cache`, `created`, `modified`, `site.id`, `site.name`, `site.require_authentication`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewsletterList"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "createnewsletterlist",
        "summary": "Create a newsletter list",
        "requestBody": {
          "description": "Json-encoded newsletter list object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/newsletter-lists/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The newsletter list id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "getnewsletterlist",
        "summary": "Get a newsletter list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "updatenewsletterlist",
        "summary": "Update a newsletter list",
        "requestBody": {
          "description": "Json-encoded newsletter list object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "deletenewsletterlist",
        "summary": "Delete a newsletter list",
        "responses": {
          "204": {
            "description": "No Content. Newsletter list was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/newsletter-lists/{id}/subscribers": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "listnewsletterlistsubscribers",
        "summary": "List all subscribers of a newsletter list",
        "description": "Returns an array of subscribers.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The newsletter list id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `active`, `confirmed`, `created`, `modified`, `list.id`, `list.name`, `list.subscribed_person_cache`, `list.created`, `list.modified`, `person.id`, `person.title`, `person.firstname`, `person.middlename`, `person.lastname`, `person.fullname`, `person.suffix`, `person.gender`, `person.birthday`, `person.email`, `person.description`, `person.is_group`, `person.external_id`, `person.virtuous_id`, `person.created`, `person.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewsletterSubscribedPerson"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/newsletter-lists/{id}/subscribers/{person}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The newsletter list id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "$ref": "#/components/parameters/person"
        }
      ],
      "post": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "subscribetonewsletterlist",
        "summary": "Subscribe to a newsletter list",
        "requestBody": {
          "description": "Json-encoded subscriber object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterSubscribedPerson"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterSubscribedPerson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "updatesubscription",
        "summary": "Update a subscription (active / confirmed)",
        "requestBody": {
          "description": "Json-encoded subscriber object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterSubscribedPerson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterSubscribedPerson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "Newsletters"
        ],
        "operationId": "unsubscribefromnewsletterlist",
        "summary": "Unsubscribe from newsletter list",
        "responses": {
          "204": {
            "description": "No Content. Unsubscribe was successful."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/payment-methods": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "operationId": "listpaymentmethods",
        "summary": "List all payment methods",
        "description": "Returns an array of payment methods.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `archived`, `deleted`, `test_mode`, `last_four`, `expiration_date`, `gateway`, `currency`, `external_id`, `person_profile_code_override`, `created`, `modified`, `card.id`, `card.name_on_card`, `card.card_type`, `card.card_number_last_four`, `card.expiration_month`, `card.expiration_year`, `card.profile_code`, `card.gateway`, `card.test_mode`, `card.created`, `card.modified`, `check.id`, `check.account_number_last_four`, `check.bank_name`, `check.name_on_account`, `check.account_type`, `check.checking_type`, `check.profile_code`, `check.routing_number`, `check.gateway`, `check.test_mode`, `check.created`, `check.modified`, `paypal.id`, `paypal.gateway`, `paypal.test_mode`, `paypal.name_on_account`, `paypal.email`, `paypal.profile_code`, `paypal.created`, `paypal.modified`, `person.id`, `person.title`, `person.firstname`, `person.middlename`, `person.lastname`, `person.fullname`, `person.suffix`, `person.gender`, `person.birthday`, `person.email`, `person.description`, `person.is_group`, `person.external_id`, `person.virtuous_id`, `person.created`, `person.modified`, `site.id`, `site.name`, `site.require_authentication`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "operationId": "createpaymentmethod",
        "summary": "Create a payment method",
        "requestBody": {
          "description": "Json-encoded payment method object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/payment-methods/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The payment method id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "operationId": "getpaymentmethod",
        "summary": "Get a payment method",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PaymentMethod"
        ],
        "operationId": "updatepaymentmethod",
        "summary": "Update a payment method",
        "requestBody": {
          "description": "Json-encoded payment method object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "listpeople",
        "summary": "List all people",
        "description": "List all CRM records in the system.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `title`, `firstname`, `middlename`, `lastname`, `fullname`, `suffix`, `gender`, `birthday`, `email`, `description`, `is_group`, `external_id`, `virtuous_id`, `created`, `modified`, `household.id`, `household.name`, `household.external_id`, `household.head_person_id`, `household.virtuous_id`, `email.id`, `email.email`, `email.default`, `email.virtuous_id`, `email.created`, `email.modified`, `photo.id`, `photo.path`, `photo.created`, `photo.modified`, `address.id`, `address.address1`, `address.address2`, `address.city`, `address.zip`, `address.latitude`, `address.longitude`, `address.external_id`, `address.default`, `address.virtuous_id`, `address.created`, `address.modified`, `phone.id`, `phone.number`, `phone.is_outside_us`, `phone.area_code`, `phone.default`, `phone.virtuous_id`, `phone.created`, `phone.modified`, `user.id`, `user.active`, `user.verified`, `user.api_id`, `user.created`, `user.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "operationId": "createperson",
        "summary": "Create a person",
        "requestBody": {
          "description": "Json-encoded person object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "CRM Record",
                "required": [],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "nullable": true,
                    "maxLength": 30,
                    "type": "string",
                    "example": "Mr."
                  },
                  "firstname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "middlename": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "lastname": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "suffix": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "example": "Jr."
                  },
                  "gender": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "enum": [
                      "m",
                      "f"
                    ]
                  },
                  "birthday": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "description": "In the format `Y-m-d`"
                  },
                  "email": {
                    "type": "object",
                    "description": "Person default email",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string"
                      },
                      "default": {
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact email id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Work Email"
                      }
                    }
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "description": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "is_group": {
                    "default": false,
                    "type": "boolean"
                  },
                  "fullname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual id."
                  },
                  "household": {
                    "type": "object",
                    "description": "Person household",
                    "properties": {
                      "id": {
                        "readOnly": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "head_person_id": {
                        "nullable": true,
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "description": "The person id of the household head."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact id."
                      },
                      "modified": {
                        "description": "The date when this record was last modified."
                      }
                    }
                  },
                  "is_household_head": {
                    "type": "boolean",
                    "writeOnly": true,
                    "description": "If set to true, it will make this person the head of household."
                  },
                  "address": {
                    "type": "object",
                    "description": "Person default address",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "address1": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "address2": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "city": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "zip": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "latitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "longitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact address id."
                      },
                      "state_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter state value",
                        "example": "FL"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter country value",
                        "example": "US"
                      },
                      "label": {
                        "type": "string",
                        "example": "Home Address"
                      }
                    }
                  },
                  "phone": {
                    "type": "object",
                    "description": "Person default phone",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "number": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "is_outside_us": {
                        "nullable": true,
                        "type": "boolean",
                        "default": false
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual contact method id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Cell"
                      }
                    }
                  },
                  "photo": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person default photo",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "path": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person user, if any",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "active": {
                        "default": true,
                        "type": "boolean"
                      },
                      "verified": {
                        "default": true,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "api_id": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true,
                        "description": "The API ID to use for API authentication."
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Array of tag ids to assign to this record. Any previous tags will be overwritten.",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/person-types/{type}/people": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "listpeoplebytype",
        "summary": "List people by type",
        "description": "List people of a certain person type.",
        "parameters": [
          {
            "$ref": "#/components/parameters/personType"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `title`, `firstname`, `middlename`, `lastname`, `fullname`, `suffix`, `gender`, `birthday`, `email`, `description`, `is_group`, `external_id`, `virtuous_id`, `created`, `modified`, `household.id`, `household.name`, `household.external_id`, `household.head_person_id`, `household.virtuous_id`, `email.id`, `email.email`, `email.default`, `email.virtuous_id`, `email.created`, `email.modified`, `photo.id`, `photo.path`, `photo.created`, `photo.modified`, `address.id`, `address.address1`, `address.address2`, `address.city`, `address.zip`, `address.latitude`, `address.longitude`, `address.external_id`, `address.default`, `address.virtuous_id`, `address.created`, `address.modified`, `phone.id`, `phone.number`, `phone.is_outside_us`, `phone.area_code`, `phone.default`, `phone.virtuous_id`, `phone.created`, `phone.modified`, `user.id`, `user.active`, `user.verified`, `user.api_id`, `user.created`, `user.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The person id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "getperson",
        "summary": "Get a person",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Person"
        ],
        "operationId": "updateperson",
        "summary": "Update a person",
        "requestBody": {
          "description": "Json-encoded person object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "CRM Record",
                "required": [],
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "nullable": true,
                    "maxLength": 30,
                    "type": "string",
                    "example": "Mr."
                  },
                  "firstname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "middlename": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "lastname": {
                    "default": "",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "suffix": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "example": "Jr."
                  },
                  "gender": {
                    "nullable": true,
                    "maxLength": 10,
                    "type": "string",
                    "enum": [
                      "m",
                      "f"
                    ]
                  },
                  "birthday": {
                    "nullable": true,
                    "type": "string",
                    "format": "date",
                    "description": "In the format `Y-m-d`"
                  },
                  "email": {
                    "type": "object",
                    "description": "Person default email",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string"
                      },
                      "default": {
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact email id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Work Email"
                      }
                    }
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "modified": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was last modified.",
                    "readOnly": true
                  },
                  "description": {
                    "default": "",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "is_group": {
                    "default": false,
                    "type": "boolean"
                  },
                  "fullname": {
                    "default": "",
                    "maxLength": 100,
                    "type": "string",
                    "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                  },
                  "external_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "An external system id."
                  },
                  "virtuous_id": {
                    "nullable": true,
                    "maxLength": 50,
                    "type": "string",
                    "description": "Virtuous contact individual id."
                  },
                  "household": {
                    "type": "object",
                    "description": "Person household",
                    "properties": {
                      "id": {
                        "readOnly": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                      },
                      "name": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "head_person_id": {
                        "nullable": true,
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "description": "The person id of the household head."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact id."
                      },
                      "modified": {
                        "description": "The date when this record was last modified."
                      }
                    }
                  },
                  "is_household_head": {
                    "type": "boolean",
                    "writeOnly": true,
                    "description": "If set to true, it will make this person the head of household."
                  },
                  "address": {
                    "type": "object",
                    "description": "Person default address",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "address1": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "address2": {
                        "nullable": true,
                        "maxLength": 300,
                        "type": "string"
                      },
                      "city": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string"
                      },
                      "zip": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "latitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "longitude": {
                        "nullable": true,
                        "maxLength": "10,6",
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact address id."
                      },
                      "state_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter state value",
                        "example": "FL"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "A two-letter country value",
                        "example": "US"
                      },
                      "label": {
                        "type": "string",
                        "example": "Home Address"
                      }
                    }
                  },
                  "phone": {
                    "type": "object",
                    "description": "Person default phone",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "number": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "default": {
                        "default": false,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "is_outside_us": {
                        "nullable": true,
                        "type": "boolean",
                        "default": false
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual contact method id."
                      },
                      "label": {
                        "type": "string",
                        "example": "Cell"
                      }
                    }
                  },
                  "photo": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person default photo",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "path": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Person user, if any",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "active": {
                        "default": true,
                        "type": "boolean"
                      },
                      "verified": {
                        "default": true,
                        "type": "boolean"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "api_id": {
                        "nullable": true,
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true,
                        "description": "The API ID to use for API authentication."
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Array of tag ids to assign to this record. Any previous tags will be overwritten.",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/person-types": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "operationId": "listtypesforperson",
        "summary": "List all available types for a person",
        "description": "Returns an array of types associated with the given person.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonType"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "operationId": "assignpersontypes",
        "summary": "Assign person types",
        "requestBody": {
          "description": "Json-encoded array of strings representing person type names.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Donor",
                    "Organization",
                    "Prospect",
                    "Registrant"
                  ]
                },
                "example": [
                  "Donor"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Returns an array with all assigned person types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonType"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        },
        "callbacks": {
          "person_type_assign": {
            "person_type_assign": {
              "post": {
                "operationId": "person_type_assign",
                "description": "Fires whenever a person type is assigned to a person.",
                "parameters": [
                  {
                    "name": "SiteStacker-Event",
                    "in": "header",
                    "description": "Name of the event that triggered this delivery.",
                    "required": true,
                    "schema": {
                      "type": "string"
                    },
                    "example": "person_type_assign"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerSignature"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerDelivery"
                  },
                  {
                    "$ref": "#/components/parameters/requestId"
                  }
                ],
                "requestBody": {
                  "description": "Json-encoded object with relevant data about the event.",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "int32"
                          },
                          "person_type": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string",
                                "example": "Donor"
                              }
                            }
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "title": {
                                "nullable": true,
                                "maxLength": 30,
                                "type": "string",
                                "example": "Mr."
                              },
                              "firstname": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "middlename": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string"
                              },
                              "lastname": {
                                "default": "",
                                "maxLength": 50,
                                "type": "string"
                              },
                              "suffix": {
                                "nullable": true,
                                "maxLength": 10,
                                "type": "string",
                                "example": "Jr."
                              },
                              "gender": {
                                "nullable": true,
                                "maxLength": 10,
                                "type": "string",
                                "enum": [
                                  "m",
                                  "f"
                                ]
                              },
                              "birthday": {
                                "nullable": true,
                                "type": "string",
                                "format": "date",
                                "description": "In the format `Y-m-d`"
                              },
                              "email": {
                                "type": "object",
                                "description": "Person default email",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "email": {
                                    "default": "",
                                    "maxLength": 250,
                                    "type": "string"
                                  },
                                  "default": [],
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact email id."
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Work Email"
                                  }
                                }
                              },
                              "created": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-04T11:39:57+00:00",
                                "description": "The date when this record was created."
                              },
                              "modified": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-04T11:39:57+00:00",
                                "description": "The date when this record was last modified."
                              },
                              "description": {
                                "default": "",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "is_group": {
                                "default": false,
                                "type": "boolean"
                              },
                              "fullname": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string",
                                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                              },
                              "external_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "An external system id."
                              },
                              "virtuous_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Virtuous contact individual id."
                              },
                              "household": {
                                "type": "object",
                                "description": "Person household",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                                  },
                                  "name": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string"
                                  },
                                  "external_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "An external system id."
                                  },
                                  "head_person_id": {
                                    "nullable": true,
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The person id of the household head."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact id."
                                  },
                                  "modified": {
                                    "description": "The date when this record was last modified."
                                  }
                                }
                              },
                              "is_household_head": {
                                "type": "boolean",
                                "writeOnly": true,
                                "description": "If set to true, it will make this person the head of household."
                              },
                              "address": {
                                "type": "object",
                                "description": "Person default address",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "address1": {
                                    "nullable": true,
                                    "maxLength": 300,
                                    "type": "string"
                                  },
                                  "address2": {
                                    "nullable": true,
                                    "maxLength": 300,
                                    "type": "string"
                                  },
                                  "city": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string"
                                  },
                                  "zip": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "default": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "latitude": {
                                    "nullable": true,
                                    "maxLength": "10,6",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "longitude": {
                                    "nullable": true,
                                    "maxLength": "10,6",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "external_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "An external system id."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact address id."
                                  },
                                  "state_code": {
                                    "type": "string",
                                    "maxLength": 2,
                                    "description": "A two-letter state value",
                                    "example": "FL"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "maxLength": 2,
                                    "description": "A two-letter country value",
                                    "example": "US"
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Home Address"
                                  }
                                }
                              },
                              "phone": {
                                "type": "object",
                                "description": "Person default phone",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "number": {
                                    "default": "",
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "default": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "is_outside_us": {
                                    "nullable": true,
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact individual contact method id."
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Cell"
                                  }
                                }
                              },
                              "photo": {
                                "type": "object",
                                "description": "Person default photo",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "default": "",
                                    "maxLength": 500,
                                    "type": "string"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  }
                                }
                              },
                              "user": {
                                "type": "object",
                                "description": "Person user, if any",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "active": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "verified": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "api_id": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The API ID to use for API authentication."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "2xx": {
                    "$ref": "#/components/responses/2xx_webhook"
                  },
                  "5xx": {
                    "$ref": "#/components/responses/5xx_webhook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/people/{person}/person-types/{type}": {
      "delete": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "$ref": "#/components/parameters/personType"
          }
        ],
        "operationId": "unassignpersontype",
        "summary": "Unassign person type",
        "responses": {
          "200": {
            "description": "OK. Returns an array with all assigned person types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonType"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        },
        "callbacks": {
          "person_type_unassign": {
            "person_type_unassign": {
              "post": {
                "operationId": "person_type_unassign",
                "description": "Fires whenever a person type is unassigned from a person.",
                "parameters": [
                  {
                    "name": "SiteStacker-Event",
                    "in": "header",
                    "description": "Name of the event that triggered this delivery.",
                    "required": true,
                    "schema": {
                      "type": "string"
                    },
                    "example": "person_type_unassign"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerSignature"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerDelivery"
                  },
                  {
                    "$ref": "#/components/parameters/requestId"
                  }
                ],
                "requestBody": {
                  "description": "Json-encoded object with relevant data about the event.",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "int32"
                          },
                          "person_type": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string",
                                "example": "Donor"
                              }
                            }
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "title": {
                                "nullable": true,
                                "maxLength": 30,
                                "type": "string",
                                "example": "Mr."
                              },
                              "firstname": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "middlename": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string"
                              },
                              "lastname": {
                                "default": "",
                                "maxLength": 50,
                                "type": "string"
                              },
                              "suffix": {
                                "nullable": true,
                                "maxLength": 10,
                                "type": "string",
                                "example": "Jr."
                              },
                              "gender": {
                                "nullable": true,
                                "maxLength": 10,
                                "type": "string",
                                "enum": [
                                  "m",
                                  "f"
                                ]
                              },
                              "birthday": {
                                "nullable": true,
                                "type": "string",
                                "format": "date",
                                "description": "In the format `Y-m-d`"
                              },
                              "email": {
                                "type": "object",
                                "description": "Person default email",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "email": {
                                    "default": "",
                                    "maxLength": 250,
                                    "type": "string"
                                  },
                                  "default": [],
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact email id."
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Work Email"
                                  }
                                }
                              },
                              "created": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-04T11:39:57+00:00",
                                "description": "The date when this record was created."
                              },
                              "modified": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-04T11:39:57+00:00",
                                "description": "The date when this record was last modified."
                              },
                              "description": {
                                "default": "",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "is_group": {
                                "default": false,
                                "type": "boolean"
                              },
                              "fullname": {
                                "default": "",
                                "maxLength": 100,
                                "type": "string",
                                "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                              },
                              "external_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "An external system id."
                              },
                              "virtuous_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Virtuous contact individual id."
                              },
                              "household": {
                                "type": "object",
                                "description": "Person household",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Specify the household id to add the person into that household or change the person's household to a different one."
                                  },
                                  "name": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string"
                                  },
                                  "external_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "An external system id."
                                  },
                                  "head_person_id": {
                                    "nullable": true,
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The person id of the household head."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact id."
                                  },
                                  "modified": {
                                    "description": "The date when this record was last modified."
                                  }
                                }
                              },
                              "is_household_head": {
                                "type": "boolean",
                                "writeOnly": true,
                                "description": "If set to true, it will make this person the head of household."
                              },
                              "address": {
                                "type": "object",
                                "description": "Person default address",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "address1": {
                                    "nullable": true,
                                    "maxLength": 300,
                                    "type": "string"
                                  },
                                  "address2": {
                                    "nullable": true,
                                    "maxLength": 300,
                                    "type": "string"
                                  },
                                  "city": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string"
                                  },
                                  "zip": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "default": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "latitude": {
                                    "nullable": true,
                                    "maxLength": "10,6",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "longitude": {
                                    "nullable": true,
                                    "maxLength": "10,6",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "external_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "An external system id."
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact address id."
                                  },
                                  "state_code": {
                                    "type": "string",
                                    "maxLength": 2,
                                    "description": "A two-letter state value",
                                    "example": "FL"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "maxLength": 2,
                                    "description": "A two-letter country value",
                                    "example": "US"
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Home Address"
                                  }
                                }
                              },
                              "phone": {
                                "type": "object",
                                "description": "Person default phone",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "number": {
                                    "default": "",
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "default": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "is_outside_us": {
                                    "nullable": true,
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "virtuous_id": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "Virtuous contact individual contact method id."
                                  },
                                  "label": {
                                    "type": "string",
                                    "example": "Cell"
                                  }
                                }
                              },
                              "photo": {
                                "type": "object",
                                "description": "Person default photo",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "default": "",
                                    "maxLength": 500,
                                    "type": "string"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  }
                                }
                              },
                              "user": {
                                "type": "object",
                                "description": "Person user, if any",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "active": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "verified": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "created": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was created."
                                  },
                                  "modified": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-04T11:39:57+00:00",
                                    "description": "The date when this record was last modified."
                                  },
                                  "api_id": {
                                    "nullable": true,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The API ID to use for API authentication."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "2xx": {
                    "$ref": "#/components/responses/2xx_webhook"
                  },
                  "5xx": {
                    "$ref": "#/components/responses/5xx_webhook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/people/{person}/tags": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "operationId": "listtagsforperson",
        "summary": "List all assigned tags for a person",
        "description": "Returns an array of tags assigned on the given person.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "operationId": "assigntagsonperson",
        "summary": "Assign tags on a person",
        "requestBody": {
          "description": "Json-encoded array of integers representing tag ids.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "int32",
                  "description": "Tag id"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Returns an array with all assigned tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        },
        "callbacks": {
          "tag_assign": {
            "tag_assign": {
              "post": {
                "operationId": "tag_assign_person",
                "description": "Fires whenever a tag is assigned to a record.\n\n**CAUTION:** This event fires on every tag assignment, so you should check that `model = Person` to make sure you're dealing with a Person record.",
                "parameters": [
                  {
                    "name": "SiteStacker-Event",
                    "in": "header",
                    "description": "Name of the event that triggered this delivery.",
                    "required": true,
                    "schema": {
                      "type": "string"
                    },
                    "example": "tag_assign"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerSignature"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerDelivery"
                  },
                  {
                    "$ref": "#/components/parameters/requestId"
                  }
                ],
                "requestBody": {
                  "description": "Json-encoded object with relevant data about the event.",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "int32"
                          },
                          "model": {
                            "type": "string",
                            "enum": [
                              "Person"
                            ],
                            "example": "Person"
                          },
                          "foreign_key": {
                            "type": "number",
                            "format": "int32",
                            "description": "The Person id"
                          },
                          "tag": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "nullable": true,
                                "maxLength": 200,
                                "type": "string"
                              },
                              "external_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Internal only."
                              },
                              "external_type": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Internal only."
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "in_content_preferences": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "order": {
                                    "default": "0",
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Internal only."
                                  },
                                  "weight": {
                                    "default": "0",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "2xx": {
                    "$ref": "#/components/responses/2xx_webhook"
                  },
                  "5xx": {
                    "$ref": "#/components/responses/5xx_webhook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/people/{person}/tags/{tag}": {
      "delete": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "$ref": "#/components/parameters/tag"
          }
        ],
        "operationId": "unassigntagfromperson",
        "summary": "Unassign tag from a person",
        "responses": {
          "200": {
            "description": "OK. Returns an array with all assigned tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        },
        "callbacks": {
          "tag_unassign": {
            "tag_unassign": {
              "post": {
                "operationId": "tag_unassign_person",
                "description": "Fires whenever a tag is unassigned from a record.\n\n**CAUTION:** This event fires on every tag unassignment, so you should check that `model = Person` to make sure you're dealing with a Person record.",
                "parameters": [
                  {
                    "name": "SiteStacker-Event",
                    "in": "header",
                    "description": "Name of the event that triggered this delivery.",
                    "required": true,
                    "schema": {
                      "type": "string"
                    },
                    "example": "tag_unassign"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerSignature"
                  },
                  {
                    "$ref": "#/components/parameters/sitestackerDelivery"
                  },
                  {
                    "$ref": "#/components/parameters/requestId"
                  }
                ],
                "requestBody": {
                  "description": "Json-encoded object with relevant data about the event.",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "format": "int32"
                          },
                          "model": {
                            "type": "string",
                            "enum": [
                              "Person"
                            ],
                            "example": "Person"
                          },
                          "foreign_key": {
                            "type": "number",
                            "format": "int32",
                            "description": "The Person id"
                          },
                          "tag": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "nullable": true,
                                "maxLength": 200,
                                "type": "string"
                              },
                              "external_id": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Internal only."
                              },
                              "external_type": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string",
                                "description": "Internal only."
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "maxLength": 50,
                                    "type": "string"
                                  },
                                  "in_content_preferences": {
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "order": {
                                    "default": "0",
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Internal only."
                                  },
                                  "weight": {
                                    "default": "0",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "2xx": {
                    "$ref": "#/components/responses/2xx_webhook"
                  },
                  "5xx": {
                    "$ref": "#/components/responses/5xx_webhook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/people/{person}/merge-into/{destination}": {
      "patch": {
        "tags": [
          "Person"
        ],
        "operationId": "mergepeople",
        "summary": "Merge a CRM record into another one",
        "description": "Merges the {person} CRM record into {destination} and deletes the {person} record.",
        "parameters": [
          {
            "name": "person",
            "in": "path",
            "description": "The person id that will be merged.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "destination",
            "in": "path",
            "description": "The person id that will be merged into.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Json-encoded rules object. This is optional, if not given it will keep the destination record and combine all records that can be combined (e.g. gifts).",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "firstname": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "middlename": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "lastname": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "suffix": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "gender": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "birthday": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "email": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "description": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "is_group": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "fullname": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "external_id": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "virtuous_id": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "household_name": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "household_external_id": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "household_virtuous_id": {
                    "type": "number",
                    "example": "0",
                    "description": "`0` means it will keep the destination record unchanged. Set to `1` to replace the value with the one from the merged record."
                  },
                  "user": {
                    "type": "number",
                    "example": "0",
                    "description": "Don't specify this field if you want to keep whatever user record exists, if only 1 exists, on any person record."
                  },
                  "entity_ConferenceRegistrarion": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  },
                  "entity_CustomerSatisfactionSurvey": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  },
                  "entity_JobInfo": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  },
                  "entity_JobInformation": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  },
                  "entity_MyWmtek": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  },
                  "entity_TellUAboutYourProject": {
                    "type": "number",
                    "example": "1",
                    "description": "`0` means it will only keep the entities from the destination record. Set to `1` to combine the entities from both records."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/addresses": {
      "get": {
        "tags": [
          "PersonAddress"
        ],
        "operationId": "listpersonaddresses",
        "summary": "List addresses for a person",
        "description": "Returns an array of addresses associated with a person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `address1`, `address2`, `city`, `zip`, `latitude`, `longitude`, `external_id`, `default`, `virtuous_id`, `created`, `modified`, `state.id`, `state.name`, `state.code`, `country.id`, `country.name`, `country.title`, `country.code`, `country.iso3`, `country.iso_number`, `country.internet`, `country.nationality`, `country.currency`, `country.currency_code`, `country.population`, `type.id`, `type.label`, `type.quantity`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonAddress"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonAddress"
        ],
        "operationId": "createpersonaddress",
        "summary": "Create a person address",
        "description": "Save a new address for the specified person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "requestBody": {
          "description": "Json-encoded address object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAddress"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/addresses/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The address id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonAddress"
        ],
        "operationId": "getpersonaddress",
        "summary": "Get a person address",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAddress"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonAddress"
        ],
        "operationId": "updatepersonaddress",
        "summary": "Update a person address",
        "requestBody": {
          "description": "Json-encoded address object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAddress"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonAddress"
        ],
        "operationId": "deletepersonaddress",
        "summary": "Delete a person address",
        "responses": {
          "204": {
            "description": "No Content. Address was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/emails": {
      "get": {
        "tags": [
          "PersonEmail"
        ],
        "operationId": "listpersonemails",
        "summary": "List emails for a person",
        "description": "Returns an array of emails associated with a person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `email`, `default`, `virtuous_id`, `created`, `modified`, `type.id`, `type.label`, `type.quantity`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonEmail"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonEmail"
        ],
        "operationId": "createpersonemail",
        "summary": "Create a person email",
        "description": "Save a new email for the specified person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "requestBody": {
          "description": "Json-encoded email object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonEmail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonEmail"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/emails/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The email id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonEmail"
        ],
        "operationId": "getpersonemail",
        "summary": "Get a person email",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonEmail"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonEmail"
        ],
        "operationId": "updatepersonemail",
        "summary": "Update a person email",
        "requestBody": {
          "description": "Json-encoded email object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonEmail"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonEmail"
        ],
        "operationId": "deletepersonemail",
        "summary": "Delete a person email",
        "responses": {
          "204": {
            "description": "No Content. Email was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/files": {
      "get": {
        "tags": [
          "PersonFile"
        ],
        "operationId": "listpersonfiles",
        "summary": "List files for a person",
        "description": "Returns an array of files associated with a person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `uuid`, `label`, `filename`, `extension`, `size`, `model`, `foreign_key`, `external_id`, `created`, `modified`, `uploader.id`, `uploader.title`, `uploader.firstname`, `uploader.middlename`, `uploader.lastname`, `uploader.fullname`, `uploader.suffix`, `uploader.gender`, `uploader.birthday`, `uploader.email`, `uploader.description`, `uploader.is_group`, `uploader.external_id`, `uploader.virtuous_id`, `uploader.created`, `uploader.modified`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonFile"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonFile"
        ],
        "operationId": "uploadapersonfile",
        "summary": "Upload a person file",
        "description": "Upload a person file. Send all parameters in the query string and the raw binary content of the file as the request body.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "filename",
            "in": "query",
            "description": "The file name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "The file extension.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "The file label. If not given, it will use the `filename`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Raw binary content of the file.",
          "required": true,
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/person-files/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The person file id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonFile"
        ],
        "operationId": "getpersonfile",
        "summary": "Get a person file.",
        "description": "To download the file's binary, set the `Accept` header of the request to `application/octet-stream`.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFile"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonFile"
        ],
        "operationId": "updatepersonfile",
        "summary": "Update a person file.",
        "description": "You can only update the fields, not the actual file. If you want to change the file, you need to delete it and create a new one.",
        "requestBody": {
          "description": "Json-encoded person file object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonFile"
        ],
        "operationId": "deletepersonfile",
        "summary": "Delete a person file",
        "responses": {
          "204": {
            "description": "No Content. Person file was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/phones": {
      "get": {
        "tags": [
          "PersonPhone"
        ],
        "operationId": "listpersonphones",
        "summary": "List phones for a person",
        "description": "Returns an array of phones associated with a person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `number`, `is_outside_us`, `area_code`, `default`, `virtuous_id`, `created`, `modified`, `type.id`, `type.label`, `type.quantity`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhone"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonPhone"
        ],
        "operationId": "createpersonphone",
        "summary": "Create a person phone",
        "description": "Save a new phone for the specified person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          }
        ],
        "requestBody": {
          "description": "Json-encoded phone object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPhone"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPhone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/phones/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The phone id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonPhone"
        ],
        "operationId": "getpersonphone",
        "summary": "Get a person phone",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPhone"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonPhone"
        ],
        "operationId": "updatepersonphone",
        "summary": "Update a person phone",
        "requestBody": {
          "description": "Json-encoded phone object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPhone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPhone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonPhone"
        ],
        "operationId": "deletepersonphone",
        "summary": "Delete a person phone",
        "responses": {
          "204": {
            "description": "No Content. Email was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/relations": {
      "get": {
        "tags": [
          "PersonRelation"
        ],
        "operationId": "listrelationsforperson",
        "summary": "List relations for a person",
        "description": "Returns an array of relations for a person.",
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `linked_relation_id`, `description`, `created`, `related_person.id`, `related_person.title`, `related_person.firstname`, `related_person.middlename`, `related_person.lastname`, `related_person.fullname`, `related_person.suffix`, `related_person.gender`, `related_person.birthday`, `related_person.email`, `related_person.description`, `related_person.is_group`, `related_person.external_id`, `related_person.virtuous_id`, `related_person.created`, `related_person.modified`, `type.id`, `type.linked_relation_type_id`, `type.is_membership`, `type.label`, `type.alias`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonRelation"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonRelation"
        ],
        "operationId": "createpersonrelation",
        "summary": "Create a person relation",
        "requestBody": {
          "description": "Json-encoded person relation object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "PersonRelation object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "linked_relation_id": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Can be itself or another relation (e.g. '`Sponsor of`' and '`Sponsored by`')."
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "description": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "person": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr."
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr."
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean"
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id."
                      }
                    }
                  },
                  "related_person": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "description": "Instead of `type.id` object, this can also be the type alias (string)",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Type id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/relations/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The relation id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonRelation"
        ],
        "operationId": "getpersonrelation",
        "summary": "Get a person relation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonRelation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonRelation"
        ],
        "operationId": "updatepersonrelation",
        "summary": "Update a person relation",
        "requestBody": {
          "description": "Json-encoded relation object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "PersonRelation object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "linked_relation_id": {
                    "default": "0",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Can be itself or another relation (e.g. '`Sponsor of`' and '`Sponsored by`')."
                  },
                  "created": {
                    "nullable": true,
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-04T11:39:57+00:00",
                    "description": "The date when this record was created.",
                    "readOnly": true
                  },
                  "description": {
                    "nullable": true,
                    "maxLength": 300,
                    "type": "string"
                  },
                  "person": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr."
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string"
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr."
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ]
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`"
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email"
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean"
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`."
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id."
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id."
                      }
                    }
                  },
                  "related_person": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "title": {
                        "nullable": true,
                        "maxLength": 30,
                        "type": "string",
                        "example": "Mr.",
                        "readOnly": true
                      },
                      "firstname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "readOnly": true
                      },
                      "middlename": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "lastname": {
                        "default": "",
                        "maxLength": 50,
                        "type": "string",
                        "readOnly": true
                      },
                      "suffix": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "example": "Jr.",
                        "readOnly": true
                      },
                      "gender": {
                        "nullable": true,
                        "maxLength": 10,
                        "type": "string",
                        "enum": [
                          "m",
                          "f"
                        ],
                        "readOnly": true
                      },
                      "birthday": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "In the format `Y-m-d`",
                        "readOnly": true
                      },
                      "email": {
                        "default": "",
                        "maxLength": 250,
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                      },
                      "created": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was created.",
                        "readOnly": true
                      },
                      "modified": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-04T11:39:57+00:00",
                        "description": "The date when this record was last modified.",
                        "readOnly": true
                      },
                      "description": {
                        "default": "",
                        "maxLength": 500,
                        "type": "string",
                        "readOnly": true
                      },
                      "is_group": {
                        "default": false,
                        "type": "boolean",
                        "readOnly": true
                      },
                      "fullname": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string",
                        "description": "If not given, it will be constructed by concatenating `firstname` and `lastname`.",
                        "readOnly": true
                      },
                      "external_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "An external system id.",
                        "readOnly": true
                      },
                      "virtuous_id": {
                        "nullable": true,
                        "maxLength": 50,
                        "type": "string",
                        "description": "Virtuous contact individual id.",
                        "readOnly": true
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "description": "Instead of `type.id` object, this can also be the type alias (string)",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Type id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonRelation"
        ],
        "operationId": "deletepersonrelation",
        "summary": "Delete a person relation",
        "responses": {
          "204": {
            "description": "No Content. Relation was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/person-types": {
      "get": {
        "tags": [
          "PersonType"
        ],
        "operationId": "listpersontypes",
        "summary": "List all person types",
        "description": "Returns an array of existing person types.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `name`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonType"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonType"
        ],
        "operationId": "createpersonrype",
        "summary": "Create a person type",
        "requestBody": {
          "description": "Json-encoded person type object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/person-types/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The person type id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonType"
        ],
        "operationId": "getpersontype",
        "summary": "Get a person type",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonType"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonType"
        ],
        "operationId": "updatepersontype",
        "summary": "Update a person type",
        "requestBody": {
          "description": "Json-encoded person type object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonType"
        ],
        "operationId": "deletepersontype",
        "summary": "Delete a person type",
        "responses": {
          "204": {
            "description": "No Content. Person type was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/entities": {
      "get": {
        "tags": [
          "PersonEntity"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/person"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `alias`, `name`, `is_multi`, `order`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "operationId": "listpersonentities",
        "summary": "List all entities for the given person",
        "description": "Returns an array of entities associated with the given person.",
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CrmEntity"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/entities/{entity}/data": {
      "parameters": [
        {
          "$ref": "#/components/parameters/person"
        },
        {
          "$ref": "#/components/parameters/entity"
        }
      ],
      "get": {
        "tags": [
          "PersonEntityData"
        ],
        "operationId": "listpersonentitydata",
        "summary": "List all entity data records for a person",
        "description": "Returns an array of items associated with the person, each item containing the custom data configured on the entity.",
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                      },
                      {
                        "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                      },
                      {
                        "$ref": "#/components/schemas/EntityJobInfo"
                      },
                      {
                        "$ref": "#/components/schemas/EntityJobInformation"
                      },
                      {
                        "$ref": "#/components/schemas/EntityMyWmtek"
                      },
                      {
                        "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                      }
                    ]
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "post": {
        "tags": [
          "PersonEntityData"
        ],
        "operationId": "createpersonentitydata",
        "summary": "Create a person entity data record",
        "description": "Save a new person entity data record associated with the CRM person.",
        "requestBody": {
          "description": "Json-encoded person entity data object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                  },
                  {
                    "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                  },
                  {
                    "$ref": "#/components/schemas/EntityJobInfo"
                  },
                  {
                    "$ref": "#/components/schemas/EntityJobInformation"
                  },
                  {
                    "$ref": "#/components/schemas/EntityMyWmtek"
                  },
                  {
                    "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                    },
                    {
                      "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInfo"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInformation"
                    },
                    {
                      "$ref": "#/components/schemas/EntityMyWmtek"
                    },
                    {
                      "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/people/{person}/entities/{entity}/data/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/person"
        },
        {
          "$ref": "#/components/parameters/entity"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The person entity data record id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "PersonEntityData"
        ],
        "operationId": "getpersonentitydata",
        "summary": "Get a person entity data record",
        "description": "Returns a single person entity data record.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                    },
                    {
                      "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInfo"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInformation"
                    },
                    {
                      "$ref": "#/components/schemas/EntityMyWmtek"
                    },
                    {
                      "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonEntityData"
        ],
        "operationId": "updatepersonentitydata",
        "summary": "Update a person entity data record",
        "requestBody": {
          "description": "Json-encoded item object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                  },
                  {
                    "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                  },
                  {
                    "$ref": "#/components/schemas/EntityJobInfo"
                  },
                  {
                    "$ref": "#/components/schemas/EntityJobInformation"
                  },
                  {
                    "$ref": "#/components/schemas/EntityMyWmtek"
                  },
                  {
                    "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EntityConferenceRegistrarion"
                    },
                    {
                      "$ref": "#/components/schemas/EntityCustomerSatisfactionSurvey"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInfo"
                    },
                    {
                      "$ref": "#/components/schemas/EntityJobInformation"
                    },
                    {
                      "$ref": "#/components/schemas/EntityMyWmtek"
                    },
                    {
                      "$ref": "#/components/schemas/EntityTellUAboutYourProject"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonEntityData"
        ],
        "operationId": "deletepersonentitydata",
        "summary": "Delete a person entity data record",
        "responses": {
          "204": {
            "description": "No Content. Person entity data was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "Site"
        ],
        "operationId": "listsites",
        "summary": "List sites",
        "description": "Returns an array of sites.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* ``",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32"
                      },
                      "name": {
                        "default": "",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "require_authentication": {
                        "default": false,
                        "type": "boolean"
                      },
                      "channels": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "status": {
                            "default": "",
                            "maxLength": 8,
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "title": {
                            "nullable": true,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "date_format": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "time_format": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "timezone": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "force_primary_domain": {
                            "default": false,
                            "type": "boolean"
                          },
                          "is_mobile": {
                            "default": false,
                            "type": "boolean"
                          },
                          "session_timeout": {
                            "nullable": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "session_timeout_browser_close": {
                            "default": false,
                            "type": "boolean"
                          },
                          "captcha_after_logins": {
                            "nullable": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "permission_access": {
                            "default": false,
                            "type": "boolean"
                          },
                          "robots": {
                            "nullable": true,
                            "type": "string"
                          },
                          "is_offline": {
                            "default": false,
                            "type": "boolean"
                          },
                          "offline_message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "force_https": {
                            "default": false,
                            "type": "boolean"
                          },
                          "template_theme": {
                            "nullable": true,
                            "maxLength": 50,
                            "type": "string"
                          },
                          "domains": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "integer",
                                "format": "int32"
                              },
                              "domain": {
                                "nullable": true,
                                "maxLength": 50,
                                "type": "string"
                              },
                              "is_primary": {
                                "default": false,
                                "type": "boolean"
                              },
                              "allow_wildcards": {
                                "default": false,
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/sites/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The site id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Site"
        ],
        "operationId": "getsite",
        "summary": "Get a site",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "default": "",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "require_authentication": {
                      "default": false,
                      "type": "boolean"
                    },
                    "channels": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32"
                        },
                        "status": {
                          "default": "",
                          "maxLength": 8,
                          "type": "string"
                        },
                        "name": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string"
                        },
                        "title": {
                          "nullable": true,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "date_format": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string"
                        },
                        "time_format": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string"
                        },
                        "timezone": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string"
                        },
                        "force_primary_domain": {
                          "default": false,
                          "type": "boolean"
                        },
                        "is_mobile": {
                          "default": false,
                          "type": "boolean"
                        },
                        "session_timeout": {
                          "nullable": true,
                          "type": "integer",
                          "format": "int32"
                        },
                        "session_timeout_browser_close": {
                          "default": false,
                          "type": "boolean"
                        },
                        "captcha_after_logins": {
                          "nullable": true,
                          "type": "integer",
                          "format": "int32"
                        },
                        "permission_access": {
                          "default": false,
                          "type": "boolean"
                        },
                        "robots": {
                          "nullable": true,
                          "type": "string"
                        },
                        "is_offline": {
                          "default": false,
                          "type": "boolean"
                        },
                        "offline_message": {
                          "nullable": true,
                          "type": "string"
                        },
                        "force_https": {
                          "default": false,
                          "type": "boolean"
                        },
                        "template_theme": {
                          "nullable": true,
                          "maxLength": 50,
                          "type": "string"
                        },
                        "domains": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "readOnly": true,
                              "type": "integer",
                              "format": "int32"
                            },
                            "domain": {
                              "nullable": true,
                              "maxLength": 50,
                              "type": "string"
                            },
                            "is_primary": {
                              "default": false,
                              "type": "boolean"
                            },
                            "allow_wildcards": {
                              "default": false,
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "listtags",
        "summary": "List tags",
        "description": "Returns an array of tags.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `name`, `external_id`, `external_type`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/tag-categories/{category}/tags": {
      "post": {
        "tags": [
          "Tag"
        ],
        "operationId": "createtag",
        "summary": "Create a tag",
        "description": "Save a new tag in the specified category.",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "The tag category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Json-encoded tag object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/tags/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The tag id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "gettag",
        "summary": "Get a tag",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "operationId": "updatetag",
        "summary": "Update a tag",
        "requestBody": {
          "description": "Json-encoded tag object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "operationId": "deletetag",
        "summary": "Delete a tag",
        "responses": {
          "204": {
            "description": "No Content. Tag was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/tag-categories": {
      "get": {
        "tags": [
          "TagCategory"
        ],
        "operationId": "listtagcategories",
        "summary": "List tag categories",
        "description": "Returns an array of tag categories.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A url-encoded json object with conditions. See [http://docs.sitestacker.com/articles/api#search--filtering](http://docs.sitestacker.com/articles/api#search--filtering).\n\n*Possible fields:* `id`, `name`, `in_content_preferences`, `order`, `weight`, `site.id`, `site.name`, `site.require_authentication`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/dir"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returned if there are no other items left (considering pagination). See also 206 Partial Content.",
            "headers": {
              "Accept-Ranges": {
                "$ref": "#/components/headers/Accept-Ranges"
              },
              "Content-Range": {
                "$ref": "#/components/headers/Content-Range"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagCategory"
                  }
                }
              }
            }
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/sites/{site}/tag-categories": {
      "post": {
        "tags": [
          "TagCategory"
        ],
        "operationId": "createtagcategory",
        "summary": "Create a tag category",
        "description": "Save a new tag category for the specified site.",
        "parameters": [
          {
            "name": "site",
            "in": "path",
            "description": "The site id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Json-encoded tag object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/tag-categories/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The tag category id.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "tags": [
          "TagCategory"
        ],
        "operationId": "gettagcategory",
        "summary": "Get a tag category",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCategory"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "patch": {
        "tags": [
          "TagCategory"
        ],
        "operationId": "updatetagcategory",
        "summary": "Update a tag category",
        "requestBody": {
          "description": "Json-encoded tag category object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      },
      "delete": {
        "tags": [
          "TagCategory"
        ],
        "operationId": "deletetagcategory",
        "summary": "Delete a tag category",
        "responses": {
          "204": {
            "description": "No Content. Tag category was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    }
  }
}
